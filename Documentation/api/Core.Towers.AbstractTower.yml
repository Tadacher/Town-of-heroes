### YamlMime:ManagedReference
items:
- uid: Core.Towers.AbstractTower
  commentId: T:Core.Towers.AbstractTower
  id: AbstractTower
  parent: Core.Towers
  children:
  - Core.Towers.AbstractTower._attackDamage
  - Core.Towers.AbstractTower._attackDelay
  - Core.Towers.AbstractTower._attackModule
  - Core.Towers.AbstractTower._attackRange
  - Core.Towers.AbstractTower._audioSource
  - Core.Towers.AbstractTower._availableEnemies
  - Core.Towers.AbstractTower._currentEnemy
  - Core.Towers.AbstractTower._currentTimeTillAttack
  - Core.Towers.AbstractTower._ghostColor
  - Core.Towers.AbstractTower._gridAlignService
  - Core.Towers.AbstractTower._isGhost
  - Core.Towers.AbstractTower._objectPooler
  - Core.Towers.AbstractTower._projectileFactory
  - Core.Towers.AbstractTower._targetTag
  - Core.Towers.AbstractTower._towerStats
  - Core.Towers.AbstractTower.AsGhost
  - Core.Towers.AbstractTower.AsUnGhost
  - Core.Towers.AbstractTower.Attack
  - Core.Towers.AbstractTower.CountAttackDelay
  - Core.Towers.AbstractTower.Experience
  - Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  - Core.Towers.AbstractTower.FindClosestTarget
  - Core.Towers.AbstractTower.Hp
  - Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  - Core.Towers.AbstractTower.InitializeAttackModule``1
  - Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  - Core.Towers.AbstractTower.InsertSelfToGrid
  - Core.Towers.AbstractTower.Level
  - Core.Towers.AbstractTower.Levelup
  - Core.Towers.AbstractTower.PlayAttackSound
  - Core.Towers.AbstractTower.RecieveExperience(System.Single)
  - Core.Towers.AbstractTower.RefreshAttackDelay
  - Core.Towers.AbstractTower.ReturnToPool
  - Core.Towers.AbstractTower.StartFollowPointer
  - Core.Towers.AbstractTower.StopFollowingPointer
  - Core.Towers.AbstractTower.TargetInRange
  - Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  - Core.Towers.AbstractTower.TryLevelup
  - Core.Towers.AbstractTower.TryToAttack
  - Core.Towers.AbstractTower.Update
  langs:
  - csharp
  - vb
  name: AbstractTower
  nameWithType: AbstractTower
  fullName: Core.Towers.AbstractTower
  type: Class
  source:
    id: AbstractTower
    path: ''
    startLine: 2914
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: 'public abstract class AbstractTower : MonoBehaviour, IExpReciever, ICommonAttacker, IPoolableObject, IGridCellObject'
    content.vb: >-
      Public MustInherit Class AbstractTower
          Inherits MonoBehaviour
          Implements IExpReciever, ICommonAttacker, IPoolableObject, IGridCellObject
  inheritance:
  - System.Object
  derivedClasses:
  - Core.Towers.ArcherTower
  - Core.Towers.ShrapnelCanonTower
  implements:
  - Global.IExpReciever
  - Global.ICommonAttacker
  - Global.IPoolableObject
  - Services.GridSystem.IGridCellObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Core.Towers.AbstractTower.Experience
  commentId: P:Core.Towers.AbstractTower.Experience
  id: Experience
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Experience
  nameWithType: AbstractTower.Experience
  fullName: Core.Towers.AbstractTower.Experience
  type: Property
  source:
    id: Experience
    path: ''
    startLine: 2916
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public virtual float Experience { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property Experience As Single
  overload: Core.Towers.AbstractTower.Experience*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Core.Towers.AbstractTower.Level
  commentId: P:Core.Towers.AbstractTower.Level
  id: Level
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: AbstractTower.Level
  fullName: Core.Towers.AbstractTower.Level
  type: Property
  source:
    id: Level
    path: ''
    startLine: 2917
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public virtual int Level { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Level As Integer
  overload: Core.Towers.AbstractTower.Level*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Core.Towers.AbstractTower.Hp
  commentId: P:Core.Towers.AbstractTower.Hp
  id: Hp
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Hp
  nameWithType: AbstractTower.Hp
  fullName: Core.Towers.AbstractTower.Hp
  type: Property
  source:
    id: Hp
    path: ''
    startLine: 2918
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public virtual int Hp { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Hp As Integer
  overload: Core.Towers.AbstractTower.Hp*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Core.Towers.AbstractTower._targetTag
  commentId: F:Core.Towers.AbstractTower._targetTag
  id: _targetTag
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _targetTag
  nameWithType: AbstractTower._targetTag
  fullName: Core.Towers.AbstractTower._targetTag
  type: Field
  source:
    id: _targetTag
    path: ''
    startLine: 2920
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected const string _targetTag = "Enemy"
    return:
      type: System.String
    content.vb: Protected Const _targetTag As String = "Enemy"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Core.Towers.AbstractTower._towerStats
  commentId: F:Core.Towers.AbstractTower._towerStats
  id: _towerStats
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _towerStats
  nameWithType: AbstractTower._towerStats
  fullName: Core.Towers.AbstractTower._towerStats
  type: Field
  source:
    id: _towerStats
    path: ''
    startLine: 2922
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected TowerStats _towerStats
    return:
      type: Global.TowerStats
    content.vb: Protected _towerStats As TowerStats
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._audioSource
  commentId: F:Core.Towers.AbstractTower._audioSource
  id: _audioSource
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _audioSource
  nameWithType: AbstractTower._audioSource
  fullName: Core.Towers.AbstractTower._audioSource
  type: Field
  source:
    id: _audioSource
    path: ''
    startLine: 2923
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected AudioSource _audioSource
    return:
      type: Global.AudioSource
    content.vb: Protected _audioSource As AudioSource
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._attackDamage
  commentId: F:Core.Towers.AbstractTower._attackDamage
  id: _attackDamage
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _attackDamage
  nameWithType: AbstractTower._attackDamage
  fullName: Core.Towers.AbstractTower._attackDamage
  type: Field
  source:
    id: _attackDamage
    path: ''
    startLine: 2929
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected int _attackDamage
    return:
      type: System.Int32
    content.vb: Protected _attackDamage As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._attackRange
  commentId: F:Core.Towers.AbstractTower._attackRange
  id: _attackRange
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _attackRange
  nameWithType: AbstractTower._attackRange
  fullName: Core.Towers.AbstractTower._attackRange
  type: Field
  source:
    id: _attackRange
    path: ''
    startLine: 2930
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected float _attackRange
    return:
      type: System.Single
    content.vb: Protected _attackRange As Single
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._attackDelay
  commentId: F:Core.Towers.AbstractTower._attackDelay
  id: _attackDelay
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _attackDelay
  nameWithType: AbstractTower._attackDelay
  fullName: Core.Towers.AbstractTower._attackDelay
  type: Field
  source:
    id: _attackDelay
    path: ''
    startLine: 2931
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected float _attackDelay
    return:
      type: System.Single
    content.vb: Protected _attackDelay As Single
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._currentTimeTillAttack
  commentId: F:Core.Towers.AbstractTower._currentTimeTillAttack
  id: _currentTimeTillAttack
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _currentTimeTillAttack
  nameWithType: AbstractTower._currentTimeTillAttack
  fullName: Core.Towers.AbstractTower._currentTimeTillAttack
  type: Field
  source:
    id: _currentTimeTillAttack
    path: ''
    startLine: 2932
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected float _currentTimeTillAttack
    return:
      type: System.Single
    content.vb: Protected _currentTimeTillAttack As Single
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._isGhost
  commentId: F:Core.Towers.AbstractTower._isGhost
  id: _isGhost
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _isGhost
  nameWithType: AbstractTower._isGhost
  fullName: Core.Towers.AbstractTower._isGhost
  type: Field
  source:
    id: _isGhost
    path: ''
    startLine: 2933
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected bool _isGhost
    return:
      type: System.Boolean
    content.vb: Protected _isGhost As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._currentEnemy
  commentId: F:Core.Towers.AbstractTower._currentEnemy
  id: _currentEnemy
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _currentEnemy
  nameWithType: AbstractTower._currentEnemy
  fullName: Core.Towers.AbstractTower._currentEnemy
  type: Field
  source:
    id: _currentEnemy
    path: ''
    startLine: 2937
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected AbstractEnemy _currentEnemy
    return:
      type: Global.AbstractEnemy
    content.vb: Protected _currentEnemy As AbstractEnemy
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._projectileFactory
  commentId: F:Core.Towers.AbstractTower._projectileFactory
  id: _projectileFactory
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _projectileFactory
  nameWithType: AbstractTower._projectileFactory
  fullName: Core.Towers.AbstractTower._projectileFactory
  type: Field
  source:
    id: _projectileFactory
    path: ''
    startLine: 2938
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected AbstractProjectileFactory _projectileFactory
    return:
      type: Global.AbstractProjectileFactory
    content.vb: Protected _projectileFactory As AbstractProjectileFactory
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._attackModule
  commentId: F:Core.Towers.AbstractTower._attackModule
  id: _attackModule
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _attackModule
  nameWithType: AbstractTower._attackModule
  fullName: Core.Towers.AbstractTower._attackModule
  type: Field
  source:
    id: _attackModule
    path: ''
    startLine: 2939
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected AbstractTowerAttackModule _attackModule
    return:
      type: Global.AbstractTowerAttackModule
    content.vb: Protected _attackModule As AbstractTowerAttackModule
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._availableEnemies
  commentId: F:Core.Towers.AbstractTower._availableEnemies
  id: _availableEnemies
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _availableEnemies
  nameWithType: AbstractTower._availableEnemies
  fullName: Core.Towers.AbstractTower._availableEnemies
  type: Field
  source:
    id: _availableEnemies
    path: ''
    startLine: 2940
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected Collider2D[] _availableEnemies
    return:
      type: Global.Collider2D[]
    content.vb: Protected _availableEnemies As Collider2D()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._gridAlignService
  commentId: F:Core.Towers.AbstractTower._gridAlignService
  id: _gridAlignService
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _gridAlignService
  nameWithType: AbstractTower._gridAlignService
  fullName: Core.Towers.AbstractTower._gridAlignService
  type: Field
  source:
    id: _gridAlignService
    path: ''
    startLine: 2941
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected BattleGridService _gridAlignService
    return:
      type: Services.GridSystem.BattleGridService
    content.vb: Protected _gridAlignService As BattleGridService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower._ghostColor
  commentId: F:Core.Towers.AbstractTower._ghostColor
  id: _ghostColor
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _ghostColor
  nameWithType: AbstractTower._ghostColor
  fullName: Core.Towers.AbstractTower._ghostColor
  type: Field
  source:
    id: _ghostColor
    path: ''
    startLine: 2942
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected readonly Color _ghostColor
    return:
      type: Global.Color
    content.vb: Protected ReadOnly _ghostColor As Color
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Core.Towers.AbstractTower._objectPooler
  commentId: F:Core.Towers.AbstractTower._objectPooler
  id: _objectPooler
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: _objectPooler
  nameWithType: AbstractTower._objectPooler
  fullName: Core.Towers.AbstractTower._objectPooler
  type: Field
  source:
    id: _objectPooler
    path: ''
    startLine: 2946
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected IObjectPooler _objectPooler
    return:
      type: Global.IObjectPooler
    content.vb: Protected _objectPooler As IObjectPooler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower.AsGhost
  commentId: M:Core.Towers.AbstractTower.AsGhost
  id: AsGhost
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: AsGhost()
  nameWithType: AbstractTower.AsGhost()
  fullName: Core.Towers.AbstractTower.AsGhost()
  type: Method
  source:
    id: AsGhost
    path: ''
    startLine: 2948
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public AbstractTower AsGhost()
    return:
      type: Core.Towers.AbstractTower
    content.vb: Public Function AsGhost As AbstractTower
  overload: Core.Towers.AbstractTower.AsGhost*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Core.Towers.AbstractTower.AsUnGhost
  commentId: M:Core.Towers.AbstractTower.AsUnGhost
  id: AsUnGhost
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: AsUnGhost()
  nameWithType: AbstractTower.AsUnGhost()
  fullName: Core.Towers.AbstractTower.AsUnGhost()
  type: Method
  source:
    id: AsUnGhost
    path: ''
    startLine: 2953
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public AbstractTower AsUnGhost()
    return:
      type: Core.Towers.AbstractTower
    content.vb: Public Function AsUnGhost As AbstractTower
  overload: Core.Towers.AbstractTower.AsUnGhost*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  commentId: M:Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  id: Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Initialize(IObjectPooler, AbstractInputService, BattleGridService)
  nameWithType: AbstractTower.Initialize(IObjectPooler, AbstractInputService, BattleGridService)
  fullName: Core.Towers.AbstractTower.Initialize(IObjectPooler, AbstractInputService, Services.GridSystem.BattleGridService)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 2958
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public virtual void Initialize(IObjectPooler objectPooler, AbstractInputService abstractInputService, BattleGridService gridAlignService)
    parameters:
    - id: objectPooler
      type: Global.IObjectPooler
    - id: abstractInputService
      type: Global.AbstractInputService
    - id: gridAlignService
      type: Services.GridSystem.BattleGridService
    content.vb: Public Overridable Sub Initialize(objectPooler As IObjectPooler, abstractInputService As AbstractInputService, gridAlignService As BattleGridService)
  overload: Core.Towers.AbstractTower.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Core.Towers.AbstractTower.Update
  commentId: M:Core.Towers.AbstractTower.Update
  id: Update
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: AbstractTower.Update()
  fullName: Core.Towers.AbstractTower.Update()
  type: Method
  source:
    id: Update
    path: ''
    startLine: 2969
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected virtual void Update()
    content.vb: Protected Overridable Sub Update
  overload: Core.Towers.AbstractTower.Update*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Core.Towers.AbstractTower.FindClosestTarget
  commentId: M:Core.Towers.AbstractTower.FindClosestTarget
  id: FindClosestTarget
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: FindClosestTarget()
  nameWithType: AbstractTower.FindClosestTarget()
  fullName: Core.Towers.AbstractTower.FindClosestTarget()
  type: Method
  source:
    id: FindClosestTarget
    path: ''
    startLine: 2975
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public virtual AbstractEnemy FindClosestTarget()
    return:
      type: Global.AbstractEnemy
    content.vb: Public Overridable Function FindClosestTarget As AbstractEnemy
  overload: Core.Towers.AbstractTower.FindClosestTarget*
  implements:
  - Global.ICommonAttacker.FindClosestTarget
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Core.Towers.AbstractTower.RecieveExperience(System.Single)
  commentId: M:Core.Towers.AbstractTower.RecieveExperience(System.Single)
  id: RecieveExperience(System.Single)
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: RecieveExperience(Single)
  nameWithType: AbstractTower.RecieveExperience(Single)
  fullName: Core.Towers.AbstractTower.RecieveExperience(System.Single)
  type: Method
  source:
    id: RecieveExperience
    path: ''
    startLine: 2996
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public virtual void RecieveExperience(float exp)
    parameters:
    - id: exp
      type: System.Single
    content.vb: Public Overridable Sub RecieveExperience(exp As Single)
  overload: Core.Towers.AbstractTower.RecieveExperience*
  implements:
  - Global.IExpReciever.RecieveExperience(System.Single)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Core.Towers.AbstractTower.ReturnToPool
  commentId: M:Core.Towers.AbstractTower.ReturnToPool
  id: ReturnToPool
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: ReturnToPool()
  nameWithType: AbstractTower.ReturnToPool()
  fullName: Core.Towers.AbstractTower.ReturnToPool()
  type: Method
  source:
    id: ReturnToPool
    path: ''
    startLine: 3001
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public void ReturnToPool()
    content.vb: Public Sub ReturnToPool
  overload: Core.Towers.AbstractTower.ReturnToPool*
  implements:
  - Global.IPoolableObject.ReturnToPool
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Core.Towers.AbstractTower.StartFollowPointer
  commentId: M:Core.Towers.AbstractTower.StartFollowPointer
  id: StartFollowPointer
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: StartFollowPointer()
  nameWithType: AbstractTower.StartFollowPointer()
  fullName: Core.Towers.AbstractTower.StartFollowPointer()
  type: Method
  source:
    id: StartFollowPointer
    path: ''
    startLine: 3004
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public void StartFollowPointer()
    content.vb: Public Sub StartFollowPointer
  overload: Core.Towers.AbstractTower.StartFollowPointer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Core.Towers.AbstractTower.StopFollowingPointer
  commentId: M:Core.Towers.AbstractTower.StopFollowingPointer
  id: StopFollowingPointer
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: StopFollowingPointer()
  nameWithType: AbstractTower.StopFollowingPointer()
  fullName: Core.Towers.AbstractTower.StopFollowingPointer()
  type: Method
  source:
    id: StopFollowingPointer
    path: ''
    startLine: 3007
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public void StopFollowingPointer()
    content.vb: Public Sub StopFollowingPointer
  overload: Core.Towers.AbstractTower.StopFollowingPointer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Core.Towers.AbstractTower.InsertSelfToGrid
  commentId: M:Core.Towers.AbstractTower.InsertSelfToGrid
  id: InsertSelfToGrid
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: InsertSelfToGrid()
  nameWithType: AbstractTower.InsertSelfToGrid()
  fullName: Core.Towers.AbstractTower.InsertSelfToGrid()
  type: Method
  source:
    id: InsertSelfToGrid
    path: ''
    startLine: 3010
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: public void InsertSelfToGrid()
    content.vb: Public Sub InsertSelfToGrid
  overload: Core.Towers.AbstractTower.InsertSelfToGrid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Core.Towers.AbstractTower.Attack
  commentId: M:Core.Towers.AbstractTower.Attack
  id: Attack
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Attack()
  nameWithType: AbstractTower.Attack()
  fullName: Core.Towers.AbstractTower.Attack()
  type: Method
  source:
    id: Attack
    path: ''
    startLine: 3012
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected abstract void Attack()
    content.vb: Protected MustOverride Sub Attack
  overload: Core.Towers.AbstractTower.Attack*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  commentId: M:Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  id: InitializeProjectileFactory(ProjectileBehaviour)
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: InitializeProjectileFactory(ProjectileBehaviour)
  nameWithType: AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  fullName: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  type: Method
  source:
    id: InitializeProjectileFactory
    path: ''
    startLine: 3013
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected abstract void InitializeProjectileFactory(ProjectileBehaviour projectileBehaviour)
    parameters:
    - id: projectileBehaviour
      type: Global.ProjectileBehaviour
    content.vb: Protected MustOverride Sub InitializeProjectileFactory(projectileBehaviour As ProjectileBehaviour)
  overload: Core.Towers.AbstractTower.InitializeProjectileFactory*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Core.Towers.AbstractTower.TryLevelup
  commentId: M:Core.Towers.AbstractTower.TryLevelup
  id: TryLevelup
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: TryLevelup()
  nameWithType: AbstractTower.TryLevelup()
  fullName: Core.Towers.AbstractTower.TryLevelup()
  type: Method
  source:
    id: TryLevelup
    path: ''
    startLine: 3015
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected virtual void TryLevelup()
    content.vb: Protected Overridable Sub TryLevelup
  overload: Core.Towers.AbstractTower.TryLevelup*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Core.Towers.AbstractTower.Levelup
  commentId: M:Core.Towers.AbstractTower.Levelup
  id: Levelup
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: Levelup()
  nameWithType: AbstractTower.Levelup()
  fullName: Core.Towers.AbstractTower.Levelup()
  type: Method
  source:
    id: Levelup
    path: ''
    startLine: 3025
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected virtual void Levelup()
    content.vb: Protected Overridable Sub Levelup
  overload: Core.Towers.AbstractTower.Levelup*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  commentId: M:Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  id: TryDealDamageToCurrentEnemy
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: TryDealDamageToCurrentEnemy()
  nameWithType: AbstractTower.TryDealDamageToCurrentEnemy()
  fullName: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy()
  type: Method
  source:
    id: TryDealDamageToCurrentEnemy
    path: ''
    startLine: 3033
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected virtual void TryDealDamageToCurrentEnemy()
    content.vb: Protected Overridable Sub TryDealDamageToCurrentEnemy
  overload: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Core.Towers.AbstractTower.RefreshAttackDelay
  commentId: M:Core.Towers.AbstractTower.RefreshAttackDelay
  id: RefreshAttackDelay
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: RefreshAttackDelay()
  nameWithType: AbstractTower.RefreshAttackDelay()
  fullName: Core.Towers.AbstractTower.RefreshAttackDelay()
  type: Method
  source:
    id: RefreshAttackDelay
    path: ''
    startLine: 3048
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected void RefreshAttackDelay()
    content.vb: Protected Sub RefreshAttackDelay
  overload: Core.Towers.AbstractTower.RefreshAttackDelay*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower.PlayAttackSound
  commentId: M:Core.Towers.AbstractTower.PlayAttackSound
  id: PlayAttackSound
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: PlayAttackSound()
  nameWithType: AbstractTower.PlayAttackSound()
  fullName: Core.Towers.AbstractTower.PlayAttackSound()
  type: Method
  source:
    id: PlayAttackSound
    path: ''
    startLine: 3049
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected void PlayAttackSound()
    content.vb: Protected Sub PlayAttackSound
  overload: Core.Towers.AbstractTower.PlayAttackSound*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower.InitializeAttackModule``1
  commentId: M:Core.Towers.AbstractTower.InitializeAttackModule``1
  id: InitializeAttackModule``1
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: InitializeAttackModule<TAttackModule>()
  nameWithType: AbstractTower.InitializeAttackModule<TAttackModule>()
  fullName: Core.Towers.AbstractTower.InitializeAttackModule<TAttackModule>()
  type: Method
  source:
    id: InitializeAttackModule
    path: ''
    startLine: 3050
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: >-
      protected void InitializeAttackModule<TAttackModule>()
          where TAttackModule : AbstractTowerAttackModule, new()
    typeParameters:
    - id: TAttackModule
    content.vb: Protected Sub InitializeAttackModule(Of TAttackModule As {AbstractTowerAttackModule, New})
  overload: Core.Towers.AbstractTower.InitializeAttackModule*
  nameWithType.vb: AbstractTower.InitializeAttackModule(Of TAttackModule)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Core.Towers.AbstractTower.InitializeAttackModule(Of TAttackModule)()
  name.vb: InitializeAttackModule(Of TAttackModule)()
- uid: Core.Towers.AbstractTower.TargetInRange
  commentId: M:Core.Towers.AbstractTower.TargetInRange
  id: TargetInRange
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: TargetInRange()
  nameWithType: AbstractTower.TargetInRange()
  fullName: Core.Towers.AbstractTower.TargetInRange()
  type: Method
  source:
    id: TargetInRange
    path: ''
    startLine: 3052
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected bool TargetInRange()
    return:
      type: System.Boolean
    content.vb: Protected Function TargetInRange As Boolean
  overload: Core.Towers.AbstractTower.TargetInRange*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower.CountAttackDelay
  commentId: M:Core.Towers.AbstractTower.CountAttackDelay
  id: CountAttackDelay
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: CountAttackDelay()
  nameWithType: AbstractTower.CountAttackDelay()
  fullName: Core.Towers.AbstractTower.CountAttackDelay()
  type: Method
  source:
    id: CountAttackDelay
    path: ''
    startLine: 3054
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected void CountAttackDelay()
    content.vb: Protected Sub CountAttackDelay
  overload: Core.Towers.AbstractTower.CountAttackDelay*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower.TryToAttack
  commentId: M:Core.Towers.AbstractTower.TryToAttack
  id: TryToAttack
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: TryToAttack()
  nameWithType: AbstractTower.TryToAttack()
  fullName: Core.Towers.AbstractTower.TryToAttack()
  type: Method
  source:
    id: TryToAttack
    path: ''
    startLine: 3060
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected void TryToAttack()
    content.vb: Protected Sub TryToAttack
  overload: Core.Towers.AbstractTower.TryToAttack*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  commentId: M:Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  id: FinClosestTargetIfNeeded
  parent: Core.Towers.AbstractTower
  langs:
  - csharp
  - vb
  name: FinClosestTargetIfNeeded()
  nameWithType: AbstractTower.FinClosestTargetIfNeeded()
  fullName: Core.Towers.AbstractTower.FinClosestTargetIfNeeded()
  type: Method
  source:
    id: FinClosestTargetIfNeeded
    path: ''
    startLine: 3066
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected void FinClosestTargetIfNeeded()
    content.vb: Protected Sub FinClosestTargetIfNeeded
  overload: Core.Towers.AbstractTower.FinClosestTargetIfNeeded*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Core.Towers
  commentId: N:Core.Towers
  name: Core.Towers
  nameWithType: Core.Towers
  fullName: Core.Towers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.IExpReciever
  commentId: T:Global.IExpReciever
  name: IExpReciever
  nameWithType: IExpReciever
  fullName: IExpReciever
- uid: Global.ICommonAttacker
  commentId: T:Global.ICommonAttacker
  name: ICommonAttacker
  nameWithType: ICommonAttacker
  fullName: ICommonAttacker
- uid: Global.IPoolableObject
  commentId: T:Global.IPoolableObject
  name: IPoolableObject
  nameWithType: IPoolableObject
  fullName: IPoolableObject
- uid: Services.GridSystem.IGridCellObject
  commentId: T:Services.GridSystem.IGridCellObject
  parent: Services.GridSystem
  name: IGridCellObject
  nameWithType: IGridCellObject
  fullName: Services.GridSystem.IGridCellObject
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Services.GridSystem
  commentId: N:Services.GridSystem
  name: Services.GridSystem
  nameWithType: Services.GridSystem
  fullName: Services.GridSystem
- uid: Core.Towers.AbstractTower.Experience*
  commentId: Overload:Core.Towers.AbstractTower.Experience
  name: Experience
  nameWithType: AbstractTower.Experience
  fullName: Core.Towers.AbstractTower.Experience
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Core.Towers.AbstractTower.Level*
  commentId: Overload:Core.Towers.AbstractTower.Level
  name: Level
  nameWithType: AbstractTower.Level
  fullName: Core.Towers.AbstractTower.Level
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Core.Towers.AbstractTower.Hp*
  commentId: Overload:Core.Towers.AbstractTower.Hp
  name: Hp
  nameWithType: AbstractTower.Hp
  fullName: Core.Towers.AbstractTower.Hp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.TowerStats
  commentId: T:Global.TowerStats
  name: TowerStats
  nameWithType: TowerStats
  fullName: TowerStats
- uid: Global.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: AudioSource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.AbstractEnemy
  commentId: T:Global.AbstractEnemy
  name: AbstractEnemy
  nameWithType: AbstractEnemy
  fullName: AbstractEnemy
- uid: Global.AbstractProjectileFactory
  commentId: T:Global.AbstractProjectileFactory
  name: AbstractProjectileFactory
  nameWithType: AbstractProjectileFactory
  fullName: AbstractProjectileFactory
- uid: Global.AbstractTowerAttackModule
  commentId: '!:Global.AbstractTowerAttackModule'
  isExternal: true
  name: AbstractTowerAttackModule
  nameWithType: AbstractTowerAttackModule
  fullName: AbstractTowerAttackModule
- uid: Global.Collider2D[]
  isExternal: true
  name: Collider2D[]
  nameWithType: Collider2D[]
  fullName: Collider2D[]
  nameWithType.vb: Collider2D()
  fullName.vb: Collider2D()
  name.vb: Collider2D()
  spec.csharp:
  - uid: Global.Collider2D
    name: Collider2D
    nameWithType: Collider2D
    fullName: Collider2D
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Global.Collider2D
    name: Collider2D
    nameWithType: Collider2D
    fullName: Collider2D
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Services.GridSystem.BattleGridService
  commentId: T:Services.GridSystem.BattleGridService
  parent: Services.GridSystem
  name: BattleGridService
  nameWithType: BattleGridService
  fullName: Services.GridSystem.BattleGridService
- uid: Global.Color
  commentId: '!:Global.Color'
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: Global.IObjectPooler
  commentId: T:Global.IObjectPooler
  name: IObjectPooler
  nameWithType: IObjectPooler
  fullName: IObjectPooler
- uid: Core.Towers.AbstractTower.AsGhost*
  commentId: Overload:Core.Towers.AbstractTower.AsGhost
  name: AsGhost
  nameWithType: AbstractTower.AsGhost
  fullName: Core.Towers.AbstractTower.AsGhost
- uid: Core.Towers.AbstractTower
  commentId: T:Core.Towers.AbstractTower
  parent: Core.Towers
  name: AbstractTower
  nameWithType: AbstractTower
  fullName: Core.Towers.AbstractTower
- uid: Core.Towers.AbstractTower.AsUnGhost*
  commentId: Overload:Core.Towers.AbstractTower.AsUnGhost
  name: AsUnGhost
  nameWithType: AbstractTower.AsUnGhost
  fullName: Core.Towers.AbstractTower.AsUnGhost
- uid: Core.Towers.AbstractTower.Initialize*
  commentId: Overload:Core.Towers.AbstractTower.Initialize
  name: Initialize
  nameWithType: AbstractTower.Initialize
  fullName: Core.Towers.AbstractTower.Initialize
- uid: Global.AbstractInputService
  isExternal: true
  name: AbstractInputService
  nameWithType: AbstractInputService
  fullName: AbstractInputService
- uid: Core.Towers.AbstractTower.Update*
  commentId: Overload:Core.Towers.AbstractTower.Update
  name: Update
  nameWithType: AbstractTower.Update
  fullName: Core.Towers.AbstractTower.Update
- uid: Core.Towers.AbstractTower.FindClosestTarget*
  commentId: Overload:Core.Towers.AbstractTower.FindClosestTarget
  name: FindClosestTarget
  nameWithType: AbstractTower.FindClosestTarget
  fullName: Core.Towers.AbstractTower.FindClosestTarget
- uid: Global.ICommonAttacker.FindClosestTarget
  commentId: M:Global.ICommonAttacker.FindClosestTarget
  parent: Global.ICommonAttacker
  name: FindClosestTarget()
  nameWithType: ICommonAttacker.FindClosestTarget()
  fullName: ICommonAttacker.FindClosestTarget()
  spec.csharp:
  - uid: Global.ICommonAttacker.FindClosestTarget
    name: FindClosestTarget
    nameWithType: ICommonAttacker.FindClosestTarget
    fullName: ICommonAttacker.FindClosestTarget
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.ICommonAttacker.FindClosestTarget
    name: FindClosestTarget
    nameWithType: ICommonAttacker.FindClosestTarget
    fullName: ICommonAttacker.FindClosestTarget
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.RecieveExperience*
  commentId: Overload:Core.Towers.AbstractTower.RecieveExperience
  name: RecieveExperience
  nameWithType: AbstractTower.RecieveExperience
  fullName: Core.Towers.AbstractTower.RecieveExperience
- uid: Global.IExpReciever.RecieveExperience(System.Single)
  commentId: M:Global.IExpReciever.RecieveExperience(System.Single)
  parent: Global.IExpReciever
  isExternal: true
  name: RecieveExperience(Single)
  nameWithType: IExpReciever.RecieveExperience(Single)
  fullName: IExpReciever.RecieveExperience(System.Single)
  spec.csharp:
  - uid: Global.IExpReciever.RecieveExperience(System.Single)
    name: RecieveExperience
    nameWithType: IExpReciever.RecieveExperience
    fullName: IExpReciever.RecieveExperience
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IExpReciever.RecieveExperience(System.Single)
    name: RecieveExperience
    nameWithType: IExpReciever.RecieveExperience
    fullName: IExpReciever.RecieveExperience
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.ReturnToPool*
  commentId: Overload:Core.Towers.AbstractTower.ReturnToPool
  name: ReturnToPool
  nameWithType: AbstractTower.ReturnToPool
  fullName: Core.Towers.AbstractTower.ReturnToPool
- uid: Global.IPoolableObject.ReturnToPool
  commentId: M:Global.IPoolableObject.ReturnToPool
  parent: Global.IPoolableObject
  name: ReturnToPool()
  nameWithType: IPoolableObject.ReturnToPool()
  fullName: IPoolableObject.ReturnToPool()
  spec.csharp:
  - uid: Global.IPoolableObject.ReturnToPool
    name: ReturnToPool
    nameWithType: IPoolableObject.ReturnToPool
    fullName: IPoolableObject.ReturnToPool
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IPoolableObject.ReturnToPool
    name: ReturnToPool
    nameWithType: IPoolableObject.ReturnToPool
    fullName: IPoolableObject.ReturnToPool
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.StartFollowPointer*
  commentId: Overload:Core.Towers.AbstractTower.StartFollowPointer
  name: StartFollowPointer
  nameWithType: AbstractTower.StartFollowPointer
  fullName: Core.Towers.AbstractTower.StartFollowPointer
- uid: Core.Towers.AbstractTower.StopFollowingPointer*
  commentId: Overload:Core.Towers.AbstractTower.StopFollowingPointer
  name: StopFollowingPointer
  nameWithType: AbstractTower.StopFollowingPointer
  fullName: Core.Towers.AbstractTower.StopFollowingPointer
- uid: Core.Towers.AbstractTower.InsertSelfToGrid*
  commentId: Overload:Core.Towers.AbstractTower.InsertSelfToGrid
  name: InsertSelfToGrid
  nameWithType: AbstractTower.InsertSelfToGrid
  fullName: Core.Towers.AbstractTower.InsertSelfToGrid
- uid: Core.Towers.AbstractTower.Attack*
  commentId: Overload:Core.Towers.AbstractTower.Attack
  name: Attack
  nameWithType: AbstractTower.Attack
  fullName: Core.Towers.AbstractTower.Attack
- uid: Core.Towers.AbstractTower.InitializeProjectileFactory*
  commentId: Overload:Core.Towers.AbstractTower.InitializeProjectileFactory
  name: InitializeProjectileFactory
  nameWithType: AbstractTower.InitializeProjectileFactory
  fullName: Core.Towers.AbstractTower.InitializeProjectileFactory
- uid: Global.ProjectileBehaviour
  commentId: T:Global.ProjectileBehaviour
  name: ProjectileBehaviour
  nameWithType: ProjectileBehaviour
  fullName: ProjectileBehaviour
- uid: Core.Towers.AbstractTower.TryLevelup*
  commentId: Overload:Core.Towers.AbstractTower.TryLevelup
  name: TryLevelup
  nameWithType: AbstractTower.TryLevelup
  fullName: Core.Towers.AbstractTower.TryLevelup
- uid: Core.Towers.AbstractTower.Levelup*
  commentId: Overload:Core.Towers.AbstractTower.Levelup
  name: Levelup
  nameWithType: AbstractTower.Levelup
  fullName: Core.Towers.AbstractTower.Levelup
- uid: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy*
  commentId: Overload:Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  name: TryDealDamageToCurrentEnemy
  nameWithType: AbstractTower.TryDealDamageToCurrentEnemy
  fullName: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
- uid: Core.Towers.AbstractTower.RefreshAttackDelay*
  commentId: Overload:Core.Towers.AbstractTower.RefreshAttackDelay
  name: RefreshAttackDelay
  nameWithType: AbstractTower.RefreshAttackDelay
  fullName: Core.Towers.AbstractTower.RefreshAttackDelay
- uid: Core.Towers.AbstractTower.PlayAttackSound*
  commentId: Overload:Core.Towers.AbstractTower.PlayAttackSound
  name: PlayAttackSound
  nameWithType: AbstractTower.PlayAttackSound
  fullName: Core.Towers.AbstractTower.PlayAttackSound
- uid: Core.Towers.AbstractTower.InitializeAttackModule*
  commentId: Overload:Core.Towers.AbstractTower.InitializeAttackModule
  name: InitializeAttackModule
  nameWithType: AbstractTower.InitializeAttackModule
  fullName: Core.Towers.AbstractTower.InitializeAttackModule
- uid: Core.Towers.AbstractTower.TargetInRange*
  commentId: Overload:Core.Towers.AbstractTower.TargetInRange
  name: TargetInRange
  nameWithType: AbstractTower.TargetInRange
  fullName: Core.Towers.AbstractTower.TargetInRange
- uid: Core.Towers.AbstractTower.CountAttackDelay*
  commentId: Overload:Core.Towers.AbstractTower.CountAttackDelay
  name: CountAttackDelay
  nameWithType: AbstractTower.CountAttackDelay
  fullName: Core.Towers.AbstractTower.CountAttackDelay
- uid: Core.Towers.AbstractTower.TryToAttack*
  commentId: Overload:Core.Towers.AbstractTower.TryToAttack
  name: TryToAttack
  nameWithType: AbstractTower.TryToAttack
  fullName: Core.Towers.AbstractTower.TryToAttack
- uid: Core.Towers.AbstractTower.FinClosestTargetIfNeeded*
  commentId: Overload:Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  name: FinClosestTargetIfNeeded
  nameWithType: AbstractTower.FinClosestTargetIfNeeded
  fullName: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
