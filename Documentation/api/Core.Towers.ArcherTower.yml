### YamlMime:ManagedReference
items:
- uid: Core.Towers.ArcherTower
  commentId: T:Core.Towers.ArcherTower
  id: ArcherTower
  parent: Core.Towers
  children:
  - Core.Towers.ArcherTower.Attack
  - Core.Towers.ArcherTower.InitializeProjectileFactory(ProjectileBehaviour)
  - Core.Towers.ArcherTower.Update
  langs:
  - csharp
  - vb
  name: ArcherTower
  nameWithType: ArcherTower
  fullName: Core.Towers.ArcherTower
  type: Class
  source:
    id: ArcherTower
    path: ''
    startLine: 3092
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: 'public class ArcherTower : AbstractTower, IExpReciever, ICommonAttacker, IPoolableObject, IGridCellObject'
    content.vb: >-
      Public Class ArcherTower
          Inherits AbstractTower
          Implements IExpReciever, ICommonAttacker, IPoolableObject, IGridCellObject
  inheritance:
  - System.Object
  - Core.Towers.AbstractTower
  implements:
  - Global.IExpReciever
  - Global.ICommonAttacker
  - Global.IPoolableObject
  - Services.GridSystem.IGridCellObject
  inheritedMembers:
  - Core.Towers.AbstractTower.Experience
  - Core.Towers.AbstractTower.Level
  - Core.Towers.AbstractTower.Hp
  - Core.Towers.AbstractTower._targetTag
  - Core.Towers.AbstractTower._towerStats
  - Core.Towers.AbstractTower._audioSource
  - Core.Towers.AbstractTower._attackDamage
  - Core.Towers.AbstractTower._attackRange
  - Core.Towers.AbstractTower._attackDelay
  - Core.Towers.AbstractTower._currentTimeTillAttack
  - Core.Towers.AbstractTower._isGhost
  - Core.Towers.AbstractTower._currentEnemy
  - Core.Towers.AbstractTower._projectileFactory
  - Core.Towers.AbstractTower._attackModule
  - Core.Towers.AbstractTower._availableEnemies
  - Core.Towers.AbstractTower._gridAlignService
  - Core.Towers.AbstractTower._ghostColor
  - Core.Towers.AbstractTower._objectPooler
  - Core.Towers.AbstractTower.AsGhost
  - Core.Towers.AbstractTower.AsUnGhost
  - Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  - Core.Towers.AbstractTower.FindClosestTarget
  - Core.Towers.AbstractTower.RecieveExperience(System.Single)
  - Core.Towers.AbstractTower.ReturnToPool
  - Core.Towers.AbstractTower.StartFollowPointer
  - Core.Towers.AbstractTower.StopFollowingPointer
  - Core.Towers.AbstractTower.InsertSelfToGrid
  - Core.Towers.AbstractTower.TryLevelup
  - Core.Towers.AbstractTower.Levelup
  - Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  - Core.Towers.AbstractTower.RefreshAttackDelay
  - Core.Towers.AbstractTower.PlayAttackSound
  - Core.Towers.AbstractTower.InitializeAttackModule``1
  - Core.Towers.AbstractTower.TargetInRange
  - Core.Towers.AbstractTower.CountAttackDelay
  - Core.Towers.AbstractTower.TryToAttack
  - Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Core.Towers.ArcherTower.Update
  commentId: M:Core.Towers.ArcherTower.Update
  id: Update
  parent: Core.Towers.ArcherTower
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ArcherTower.Update()
  fullName: Core.Towers.ArcherTower.Update()
  type: Method
  source:
    id: Update
    path: ''
    startLine: 3100
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected override void Update()
    content.vb: Protected Overrides Sub Update
  overridden: Core.Towers.AbstractTower.Update
  overload: Core.Towers.ArcherTower.Update*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Core.Towers.ArcherTower.Attack
  commentId: M:Core.Towers.ArcherTower.Attack
  id: Attack
  parent: Core.Towers.ArcherTower
  langs:
  - csharp
  - vb
  name: Attack()
  nameWithType: ArcherTower.Attack()
  fullName: Core.Towers.ArcherTower.Attack()
  type: Method
  source:
    id: Attack
    path: ''
    startLine: 3113
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected override void Attack()
    content.vb: Protected Overrides Sub Attack
  overridden: Core.Towers.AbstractTower.Attack
  overload: Core.Towers.ArcherTower.Attack*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Core.Towers.ArcherTower.InitializeProjectileFactory(ProjectileBehaviour)
  commentId: M:Core.Towers.ArcherTower.InitializeProjectileFactory(ProjectileBehaviour)
  id: InitializeProjectileFactory(ProjectileBehaviour)
  parent: Core.Towers.ArcherTower
  langs:
  - csharp
  - vb
  name: InitializeProjectileFactory(ProjectileBehaviour)
  nameWithType: ArcherTower.InitializeProjectileFactory(ProjectileBehaviour)
  fullName: Core.Towers.ArcherTower.InitializeProjectileFactory(ProjectileBehaviour)
  type: Method
  source:
    id: InitializeProjectileFactory
    path: ''
    startLine: 3120
  assemblies:
  - cs.temp.dll
  namespace: Core.Towers
  syntax:
    content: protected override void InitializeProjectileFactory(ProjectileBehaviour projectilePrefab)
    parameters:
    - id: projectilePrefab
      type: Global.ProjectileBehaviour
    content.vb: Protected Overrides Sub InitializeProjectileFactory(projectilePrefab As ProjectileBehaviour)
  overridden: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  overload: Core.Towers.ArcherTower.InitializeProjectileFactory*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Core.Towers
  commentId: N:Core.Towers
  name: Core.Towers
  nameWithType: Core.Towers
  fullName: Core.Towers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Core.Towers.AbstractTower
  commentId: T:Core.Towers.AbstractTower
  parent: Core.Towers
  name: AbstractTower
  nameWithType: AbstractTower
  fullName: Core.Towers.AbstractTower
- uid: Global.IExpReciever
  commentId: T:Global.IExpReciever
  name: IExpReciever
  nameWithType: IExpReciever
  fullName: IExpReciever
- uid: Global.ICommonAttacker
  commentId: T:Global.ICommonAttacker
  name: ICommonAttacker
  nameWithType: ICommonAttacker
  fullName: ICommonAttacker
- uid: Global.IPoolableObject
  commentId: T:Global.IPoolableObject
  name: IPoolableObject
  nameWithType: IPoolableObject
  fullName: IPoolableObject
- uid: Services.GridSystem.IGridCellObject
  commentId: T:Services.GridSystem.IGridCellObject
  parent: Services.GridSystem
  name: IGridCellObject
  nameWithType: IGridCellObject
  fullName: Services.GridSystem.IGridCellObject
- uid: Core.Towers.AbstractTower.Experience
  commentId: P:Core.Towers.AbstractTower.Experience
  parent: Core.Towers.AbstractTower
  name: Experience
  nameWithType: AbstractTower.Experience
  fullName: Core.Towers.AbstractTower.Experience
- uid: Core.Towers.AbstractTower.Level
  commentId: P:Core.Towers.AbstractTower.Level
  parent: Core.Towers.AbstractTower
  name: Level
  nameWithType: AbstractTower.Level
  fullName: Core.Towers.AbstractTower.Level
- uid: Core.Towers.AbstractTower.Hp
  commentId: P:Core.Towers.AbstractTower.Hp
  parent: Core.Towers.AbstractTower
  name: Hp
  nameWithType: AbstractTower.Hp
  fullName: Core.Towers.AbstractTower.Hp
- uid: Core.Towers.AbstractTower._targetTag
  commentId: F:Core.Towers.AbstractTower._targetTag
  parent: Core.Towers.AbstractTower
  name: _targetTag
  nameWithType: AbstractTower._targetTag
  fullName: Core.Towers.AbstractTower._targetTag
- uid: Core.Towers.AbstractTower._towerStats
  commentId: F:Core.Towers.AbstractTower._towerStats
  parent: Core.Towers.AbstractTower
  name: _towerStats
  nameWithType: AbstractTower._towerStats
  fullName: Core.Towers.AbstractTower._towerStats
- uid: Core.Towers.AbstractTower._audioSource
  commentId: F:Core.Towers.AbstractTower._audioSource
  parent: Core.Towers.AbstractTower
  name: _audioSource
  nameWithType: AbstractTower._audioSource
  fullName: Core.Towers.AbstractTower._audioSource
- uid: Core.Towers.AbstractTower._attackDamage
  commentId: F:Core.Towers.AbstractTower._attackDamage
  parent: Core.Towers.AbstractTower
  name: _attackDamage
  nameWithType: AbstractTower._attackDamage
  fullName: Core.Towers.AbstractTower._attackDamage
- uid: Core.Towers.AbstractTower._attackRange
  commentId: F:Core.Towers.AbstractTower._attackRange
  parent: Core.Towers.AbstractTower
  name: _attackRange
  nameWithType: AbstractTower._attackRange
  fullName: Core.Towers.AbstractTower._attackRange
- uid: Core.Towers.AbstractTower._attackDelay
  commentId: F:Core.Towers.AbstractTower._attackDelay
  parent: Core.Towers.AbstractTower
  name: _attackDelay
  nameWithType: AbstractTower._attackDelay
  fullName: Core.Towers.AbstractTower._attackDelay
- uid: Core.Towers.AbstractTower._currentTimeTillAttack
  commentId: F:Core.Towers.AbstractTower._currentTimeTillAttack
  parent: Core.Towers.AbstractTower
  name: _currentTimeTillAttack
  nameWithType: AbstractTower._currentTimeTillAttack
  fullName: Core.Towers.AbstractTower._currentTimeTillAttack
- uid: Core.Towers.AbstractTower._isGhost
  commentId: F:Core.Towers.AbstractTower._isGhost
  parent: Core.Towers.AbstractTower
  name: _isGhost
  nameWithType: AbstractTower._isGhost
  fullName: Core.Towers.AbstractTower._isGhost
- uid: Core.Towers.AbstractTower._currentEnemy
  commentId: F:Core.Towers.AbstractTower._currentEnemy
  parent: Core.Towers.AbstractTower
  name: _currentEnemy
  nameWithType: AbstractTower._currentEnemy
  fullName: Core.Towers.AbstractTower._currentEnemy
- uid: Core.Towers.AbstractTower._projectileFactory
  commentId: F:Core.Towers.AbstractTower._projectileFactory
  parent: Core.Towers.AbstractTower
  name: _projectileFactory
  nameWithType: AbstractTower._projectileFactory
  fullName: Core.Towers.AbstractTower._projectileFactory
- uid: Core.Towers.AbstractTower._attackModule
  commentId: F:Core.Towers.AbstractTower._attackModule
  parent: Core.Towers.AbstractTower
  name: _attackModule
  nameWithType: AbstractTower._attackModule
  fullName: Core.Towers.AbstractTower._attackModule
- uid: Core.Towers.AbstractTower._availableEnemies
  commentId: F:Core.Towers.AbstractTower._availableEnemies
  parent: Core.Towers.AbstractTower
  name: _availableEnemies
  nameWithType: AbstractTower._availableEnemies
  fullName: Core.Towers.AbstractTower._availableEnemies
- uid: Core.Towers.AbstractTower._gridAlignService
  commentId: F:Core.Towers.AbstractTower._gridAlignService
  parent: Core.Towers.AbstractTower
  name: _gridAlignService
  nameWithType: AbstractTower._gridAlignService
  fullName: Core.Towers.AbstractTower._gridAlignService
- uid: Core.Towers.AbstractTower._ghostColor
  commentId: F:Core.Towers.AbstractTower._ghostColor
  parent: Core.Towers.AbstractTower
  name: _ghostColor
  nameWithType: AbstractTower._ghostColor
  fullName: Core.Towers.AbstractTower._ghostColor
- uid: Core.Towers.AbstractTower._objectPooler
  commentId: F:Core.Towers.AbstractTower._objectPooler
  parent: Core.Towers.AbstractTower
  name: _objectPooler
  nameWithType: AbstractTower._objectPooler
  fullName: Core.Towers.AbstractTower._objectPooler
- uid: Core.Towers.AbstractTower.AsGhost
  commentId: M:Core.Towers.AbstractTower.AsGhost
  parent: Core.Towers.AbstractTower
  name: AsGhost()
  nameWithType: AbstractTower.AsGhost()
  fullName: Core.Towers.AbstractTower.AsGhost()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.AsGhost
    name: AsGhost
    nameWithType: AbstractTower.AsGhost
    fullName: Core.Towers.AbstractTower.AsGhost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.AsGhost
    name: AsGhost
    nameWithType: AbstractTower.AsGhost
    fullName: Core.Towers.AbstractTower.AsGhost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.AsUnGhost
  commentId: M:Core.Towers.AbstractTower.AsUnGhost
  parent: Core.Towers.AbstractTower
  name: AsUnGhost()
  nameWithType: AbstractTower.AsUnGhost()
  fullName: Core.Towers.AbstractTower.AsUnGhost()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.AsUnGhost
    name: AsUnGhost
    nameWithType: AbstractTower.AsUnGhost
    fullName: Core.Towers.AbstractTower.AsUnGhost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.AsUnGhost
    name: AsUnGhost
    nameWithType: AbstractTower.AsUnGhost
    fullName: Core.Towers.AbstractTower.AsUnGhost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  commentId: M:Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
  parent: Core.Towers.AbstractTower
  isExternal: true
  name: Initialize(IObjectPooler, AbstractInputService, BattleGridService)
  nameWithType: AbstractTower.Initialize(IObjectPooler, AbstractInputService, BattleGridService)
  fullName: Core.Towers.AbstractTower.Initialize(IObjectPooler, AbstractInputService, Services.GridSystem.BattleGridService)
  spec.csharp:
  - uid: Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
    name: Initialize
    nameWithType: AbstractTower.Initialize
    fullName: Core.Towers.AbstractTower.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.IObjectPooler
    name: IObjectPooler
    nameWithType: IObjectPooler
    fullName: IObjectPooler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.AbstractInputService
    name: AbstractInputService
    nameWithType: AbstractInputService
    fullName: AbstractInputService
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Services.GridSystem.BattleGridService
    name: BattleGridService
    nameWithType: BattleGridService
    fullName: Services.GridSystem.BattleGridService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.Initialize(IObjectPooler,AbstractInputService,Services.GridSystem.BattleGridService)
    name: Initialize
    nameWithType: AbstractTower.Initialize
    fullName: Core.Towers.AbstractTower.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.IObjectPooler
    name: IObjectPooler
    nameWithType: IObjectPooler
    fullName: IObjectPooler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.AbstractInputService
    name: AbstractInputService
    nameWithType: AbstractInputService
    fullName: AbstractInputService
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Services.GridSystem.BattleGridService
    name: BattleGridService
    nameWithType: BattleGridService
    fullName: Services.GridSystem.BattleGridService
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.FindClosestTarget
  commentId: M:Core.Towers.AbstractTower.FindClosestTarget
  parent: Core.Towers.AbstractTower
  name: FindClosestTarget()
  nameWithType: AbstractTower.FindClosestTarget()
  fullName: Core.Towers.AbstractTower.FindClosestTarget()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.FindClosestTarget
    name: FindClosestTarget
    nameWithType: AbstractTower.FindClosestTarget
    fullName: Core.Towers.AbstractTower.FindClosestTarget
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.FindClosestTarget
    name: FindClosestTarget
    nameWithType: AbstractTower.FindClosestTarget
    fullName: Core.Towers.AbstractTower.FindClosestTarget
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.RecieveExperience(System.Single)
  commentId: M:Core.Towers.AbstractTower.RecieveExperience(System.Single)
  parent: Core.Towers.AbstractTower
  isExternal: true
  name: RecieveExperience(Single)
  nameWithType: AbstractTower.RecieveExperience(Single)
  fullName: Core.Towers.AbstractTower.RecieveExperience(System.Single)
  spec.csharp:
  - uid: Core.Towers.AbstractTower.RecieveExperience(System.Single)
    name: RecieveExperience
    nameWithType: AbstractTower.RecieveExperience
    fullName: Core.Towers.AbstractTower.RecieveExperience
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.RecieveExperience(System.Single)
    name: RecieveExperience
    nameWithType: AbstractTower.RecieveExperience
    fullName: Core.Towers.AbstractTower.RecieveExperience
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.ReturnToPool
  commentId: M:Core.Towers.AbstractTower.ReturnToPool
  parent: Core.Towers.AbstractTower
  name: ReturnToPool()
  nameWithType: AbstractTower.ReturnToPool()
  fullName: Core.Towers.AbstractTower.ReturnToPool()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.ReturnToPool
    name: ReturnToPool
    nameWithType: AbstractTower.ReturnToPool
    fullName: Core.Towers.AbstractTower.ReturnToPool
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.ReturnToPool
    name: ReturnToPool
    nameWithType: AbstractTower.ReturnToPool
    fullName: Core.Towers.AbstractTower.ReturnToPool
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.StartFollowPointer
  commentId: M:Core.Towers.AbstractTower.StartFollowPointer
  parent: Core.Towers.AbstractTower
  name: StartFollowPointer()
  nameWithType: AbstractTower.StartFollowPointer()
  fullName: Core.Towers.AbstractTower.StartFollowPointer()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.StartFollowPointer
    name: StartFollowPointer
    nameWithType: AbstractTower.StartFollowPointer
    fullName: Core.Towers.AbstractTower.StartFollowPointer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.StartFollowPointer
    name: StartFollowPointer
    nameWithType: AbstractTower.StartFollowPointer
    fullName: Core.Towers.AbstractTower.StartFollowPointer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.StopFollowingPointer
  commentId: M:Core.Towers.AbstractTower.StopFollowingPointer
  parent: Core.Towers.AbstractTower
  name: StopFollowingPointer()
  nameWithType: AbstractTower.StopFollowingPointer()
  fullName: Core.Towers.AbstractTower.StopFollowingPointer()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.StopFollowingPointer
    name: StopFollowingPointer
    nameWithType: AbstractTower.StopFollowingPointer
    fullName: Core.Towers.AbstractTower.StopFollowingPointer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.StopFollowingPointer
    name: StopFollowingPointer
    nameWithType: AbstractTower.StopFollowingPointer
    fullName: Core.Towers.AbstractTower.StopFollowingPointer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.InsertSelfToGrid
  commentId: M:Core.Towers.AbstractTower.InsertSelfToGrid
  parent: Core.Towers.AbstractTower
  name: InsertSelfToGrid()
  nameWithType: AbstractTower.InsertSelfToGrid()
  fullName: Core.Towers.AbstractTower.InsertSelfToGrid()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.InsertSelfToGrid
    name: InsertSelfToGrid
    nameWithType: AbstractTower.InsertSelfToGrid
    fullName: Core.Towers.AbstractTower.InsertSelfToGrid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.InsertSelfToGrid
    name: InsertSelfToGrid
    nameWithType: AbstractTower.InsertSelfToGrid
    fullName: Core.Towers.AbstractTower.InsertSelfToGrid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.TryLevelup
  commentId: M:Core.Towers.AbstractTower.TryLevelup
  parent: Core.Towers.AbstractTower
  name: TryLevelup()
  nameWithType: AbstractTower.TryLevelup()
  fullName: Core.Towers.AbstractTower.TryLevelup()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.TryLevelup
    name: TryLevelup
    nameWithType: AbstractTower.TryLevelup
    fullName: Core.Towers.AbstractTower.TryLevelup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.TryLevelup
    name: TryLevelup
    nameWithType: AbstractTower.TryLevelup
    fullName: Core.Towers.AbstractTower.TryLevelup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.Levelup
  commentId: M:Core.Towers.AbstractTower.Levelup
  parent: Core.Towers.AbstractTower
  name: Levelup()
  nameWithType: AbstractTower.Levelup()
  fullName: Core.Towers.AbstractTower.Levelup()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.Levelup
    name: Levelup
    nameWithType: AbstractTower.Levelup
    fullName: Core.Towers.AbstractTower.Levelup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.Levelup
    name: Levelup
    nameWithType: AbstractTower.Levelup
    fullName: Core.Towers.AbstractTower.Levelup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  commentId: M:Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  parent: Core.Towers.AbstractTower
  name: TryDealDamageToCurrentEnemy()
  nameWithType: AbstractTower.TryDealDamageToCurrentEnemy()
  fullName: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
    name: TryDealDamageToCurrentEnemy
    nameWithType: AbstractTower.TryDealDamageToCurrentEnemy
    fullName: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
    name: TryDealDamageToCurrentEnemy
    nameWithType: AbstractTower.TryDealDamageToCurrentEnemy
    fullName: Core.Towers.AbstractTower.TryDealDamageToCurrentEnemy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.RefreshAttackDelay
  commentId: M:Core.Towers.AbstractTower.RefreshAttackDelay
  parent: Core.Towers.AbstractTower
  name: RefreshAttackDelay()
  nameWithType: AbstractTower.RefreshAttackDelay()
  fullName: Core.Towers.AbstractTower.RefreshAttackDelay()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.RefreshAttackDelay
    name: RefreshAttackDelay
    nameWithType: AbstractTower.RefreshAttackDelay
    fullName: Core.Towers.AbstractTower.RefreshAttackDelay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.RefreshAttackDelay
    name: RefreshAttackDelay
    nameWithType: AbstractTower.RefreshAttackDelay
    fullName: Core.Towers.AbstractTower.RefreshAttackDelay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.PlayAttackSound
  commentId: M:Core.Towers.AbstractTower.PlayAttackSound
  parent: Core.Towers.AbstractTower
  name: PlayAttackSound()
  nameWithType: AbstractTower.PlayAttackSound()
  fullName: Core.Towers.AbstractTower.PlayAttackSound()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.PlayAttackSound
    name: PlayAttackSound
    nameWithType: AbstractTower.PlayAttackSound
    fullName: Core.Towers.AbstractTower.PlayAttackSound
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.PlayAttackSound
    name: PlayAttackSound
    nameWithType: AbstractTower.PlayAttackSound
    fullName: Core.Towers.AbstractTower.PlayAttackSound
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.InitializeAttackModule``1
  commentId: M:Core.Towers.AbstractTower.InitializeAttackModule``1
  parent: Core.Towers.AbstractTower
  name: InitializeAttackModule<TAttackModule>()
  nameWithType: AbstractTower.InitializeAttackModule<TAttackModule>()
  fullName: Core.Towers.AbstractTower.InitializeAttackModule<TAttackModule>()
  nameWithType.vb: AbstractTower.InitializeAttackModule(Of TAttackModule)()
  fullName.vb: Core.Towers.AbstractTower.InitializeAttackModule(Of TAttackModule)()
  name.vb: InitializeAttackModule(Of TAttackModule)()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.InitializeAttackModule``1
    name: InitializeAttackModule<TAttackModule>
    nameWithType: AbstractTower.InitializeAttackModule<TAttackModule>
    fullName: Core.Towers.AbstractTower.InitializeAttackModule<TAttackModule>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.InitializeAttackModule``1
    name: InitializeAttackModule(Of TAttackModule)
    nameWithType: AbstractTower.InitializeAttackModule(Of TAttackModule)
    fullName: Core.Towers.AbstractTower.InitializeAttackModule(Of TAttackModule)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.TargetInRange
  commentId: M:Core.Towers.AbstractTower.TargetInRange
  parent: Core.Towers.AbstractTower
  name: TargetInRange()
  nameWithType: AbstractTower.TargetInRange()
  fullName: Core.Towers.AbstractTower.TargetInRange()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.TargetInRange
    name: TargetInRange
    nameWithType: AbstractTower.TargetInRange
    fullName: Core.Towers.AbstractTower.TargetInRange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.TargetInRange
    name: TargetInRange
    nameWithType: AbstractTower.TargetInRange
    fullName: Core.Towers.AbstractTower.TargetInRange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.CountAttackDelay
  commentId: M:Core.Towers.AbstractTower.CountAttackDelay
  parent: Core.Towers.AbstractTower
  name: CountAttackDelay()
  nameWithType: AbstractTower.CountAttackDelay()
  fullName: Core.Towers.AbstractTower.CountAttackDelay()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.CountAttackDelay
    name: CountAttackDelay
    nameWithType: AbstractTower.CountAttackDelay
    fullName: Core.Towers.AbstractTower.CountAttackDelay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.CountAttackDelay
    name: CountAttackDelay
    nameWithType: AbstractTower.CountAttackDelay
    fullName: Core.Towers.AbstractTower.CountAttackDelay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.TryToAttack
  commentId: M:Core.Towers.AbstractTower.TryToAttack
  parent: Core.Towers.AbstractTower
  name: TryToAttack()
  nameWithType: AbstractTower.TryToAttack()
  fullName: Core.Towers.AbstractTower.TryToAttack()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.TryToAttack
    name: TryToAttack
    nameWithType: AbstractTower.TryToAttack
    fullName: Core.Towers.AbstractTower.TryToAttack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.TryToAttack
    name: TryToAttack
    nameWithType: AbstractTower.TryToAttack
    fullName: Core.Towers.AbstractTower.TryToAttack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  commentId: M:Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  parent: Core.Towers.AbstractTower
  name: FinClosestTargetIfNeeded()
  nameWithType: AbstractTower.FinClosestTargetIfNeeded()
  fullName: Core.Towers.AbstractTower.FinClosestTargetIfNeeded()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
    name: FinClosestTargetIfNeeded
    nameWithType: AbstractTower.FinClosestTargetIfNeeded
    fullName: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
    name: FinClosestTargetIfNeeded
    nameWithType: AbstractTower.FinClosestTargetIfNeeded
    fullName: Core.Towers.AbstractTower.FinClosestTargetIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Services.GridSystem
  commentId: N:Services.GridSystem
  name: Services.GridSystem
  nameWithType: Services.GridSystem
  fullName: Services.GridSystem
- uid: Core.Towers.AbstractTower.Update
  commentId: M:Core.Towers.AbstractTower.Update
  parent: Core.Towers.AbstractTower
  name: Update()
  nameWithType: AbstractTower.Update()
  fullName: Core.Towers.AbstractTower.Update()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.Update
    name: Update
    nameWithType: AbstractTower.Update
    fullName: Core.Towers.AbstractTower.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.Update
    name: Update
    nameWithType: AbstractTower.Update
    fullName: Core.Towers.AbstractTower.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.ArcherTower.Update*
  commentId: Overload:Core.Towers.ArcherTower.Update
  name: Update
  nameWithType: ArcherTower.Update
  fullName: Core.Towers.ArcherTower.Update
- uid: Core.Towers.AbstractTower.Attack
  commentId: M:Core.Towers.AbstractTower.Attack
  parent: Core.Towers.AbstractTower
  name: Attack()
  nameWithType: AbstractTower.Attack()
  fullName: Core.Towers.AbstractTower.Attack()
  spec.csharp:
  - uid: Core.Towers.AbstractTower.Attack
    name: Attack
    nameWithType: AbstractTower.Attack
    fullName: Core.Towers.AbstractTower.Attack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.Attack
    name: Attack
    nameWithType: AbstractTower.Attack
    fullName: Core.Towers.AbstractTower.Attack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.ArcherTower.Attack*
  commentId: Overload:Core.Towers.ArcherTower.Attack
  name: Attack
  nameWithType: ArcherTower.Attack
  fullName: Core.Towers.ArcherTower.Attack
- uid: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  commentId: M:Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  parent: Core.Towers.AbstractTower
  name: InitializeProjectileFactory(ProjectileBehaviour)
  nameWithType: AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  fullName: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
  spec.csharp:
  - uid: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
    name: InitializeProjectileFactory
    nameWithType: AbstractTower.InitializeProjectileFactory
    fullName: Core.Towers.AbstractTower.InitializeProjectileFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.ProjectileBehaviour
    name: ProjectileBehaviour
    nameWithType: ProjectileBehaviour
    fullName: ProjectileBehaviour
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Core.Towers.AbstractTower.InitializeProjectileFactory(ProjectileBehaviour)
    name: InitializeProjectileFactory
    nameWithType: AbstractTower.InitializeProjectileFactory
    fullName: Core.Towers.AbstractTower.InitializeProjectileFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.ProjectileBehaviour
    name: ProjectileBehaviour
    nameWithType: ProjectileBehaviour
    fullName: ProjectileBehaviour
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.ArcherTower.InitializeProjectileFactory*
  commentId: Overload:Core.Towers.ArcherTower.InitializeProjectileFactory
  name: InitializeProjectileFactory
  nameWithType: ArcherTower.InitializeProjectileFactory
  fullName: Core.Towers.ArcherTower.InitializeProjectileFactory
- uid: Global.ProjectileBehaviour
  commentId: T:Global.ProjectileBehaviour
  name: ProjectileBehaviour
  nameWithType: ProjectileBehaviour
  fullName: ProjectileBehaviour
