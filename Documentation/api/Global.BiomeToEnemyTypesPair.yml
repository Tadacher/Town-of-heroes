### YamlMime:ManagedReference
items:
- uid: Global.BiomeToEnemyTypesPair
  commentId: T:Global.BiomeToEnemyTypesPair
  id: BiomeToEnemyTypesPair
  parent: Global
  children:
  - Global.BiomeToEnemyTypesPair.CellBiomeType
  - Global.BiomeToEnemyTypesPair.ProbabilityWeightPairs
  langs:
  - csharp
  - vb
  name: BiomeToEnemyTypesPair
  nameWithType: BiomeToEnemyTypesPair
  fullName: BiomeToEnemyTypesPair
  type: Class
  source:
    id: BiomeToEnemyTypesPair
    path: ''
    startLine: 1439
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ndescribes which biome can be cause which enemyTypes to spawn\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class BiomeToEnemyTypesPair
    content.vb: >-
      <Serializable>

      Public Class BiomeToEnemyTypesPair
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.BiomeToEnemyTypesPair.CellBiomeType
  commentId: F:Global.BiomeToEnemyTypesPair.CellBiomeType
  id: CellBiomeType
  parent: Global.BiomeToEnemyTypesPair
  langs:
  - csharp
  - vb
  name: CellBiomeType
  nameWithType: BiomeToEnemyTypesPair.CellBiomeType
  fullName: BiomeToEnemyTypesPair.CellBiomeType
  type: Field
  source:
    id: CellBiomeType
    path: ''
    startLine: 1442
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public CellBiomeTypes CellBiomeType
    return:
      type: WorldCells.CellBiomeTypes
    content.vb: Public CellBiomeType As CellBiomeTypes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.BiomeToEnemyTypesPair.ProbabilityWeightPairs
  commentId: F:Global.BiomeToEnemyTypesPair.ProbabilityWeightPairs
  id: ProbabilityWeightPairs
  parent: Global.BiomeToEnemyTypesPair
  langs:
  - csharp
  - vb
  name: ProbabilityWeightPairs
  nameWithType: BiomeToEnemyTypesPair.ProbabilityWeightPairs
  fullName: BiomeToEnemyTypesPair.ProbabilityWeightPairs
  type: Field
  source:
    id: ProbabilityWeightPairs
    path: ''
    startLine: 1443
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public EnemytypeToWeightPair[] ProbabilityWeightPairs
    return:
      type: Global.EnemytypeToWeightPair[]
    content.vb: Public ProbabilityWeightPairs As EnemytypeToWeightPair()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WorldCells.CellBiomeTypes
  commentId: T:WorldCells.CellBiomeTypes
  parent: WorldCells
  name: CellBiomeTypes
  nameWithType: CellBiomeTypes
  fullName: WorldCells.CellBiomeTypes
- uid: WorldCells
  commentId: N:WorldCells
  name: WorldCells
  nameWithType: WorldCells
  fullName: WorldCells
- uid: Global.EnemytypeToWeightPair[]
  isExternal: true
  name: EnemytypeToWeightPair[]
  nameWithType: EnemytypeToWeightPair[]
  fullName: EnemytypeToWeightPair[]
  nameWithType.vb: EnemytypeToWeightPair()
  fullName.vb: EnemytypeToWeightPair()
  name.vb: EnemytypeToWeightPair()
  spec.csharp:
  - uid: Global.EnemytypeToWeightPair
    name: EnemytypeToWeightPair
    nameWithType: EnemytypeToWeightPair
    fullName: EnemytypeToWeightPair
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Global.EnemytypeToWeightPair
    name: EnemytypeToWeightPair
    nameWithType: EnemytypeToWeightPair
    fullName: EnemytypeToWeightPair
  - name: ()
    nameWithType: ()
    fullName: ()
