### YamlMime:ManagedReference
items:
- uid: Global.WaveGenerator
  commentId: T:Global.WaveGenerator
  id: WaveGenerator
  parent: Global
  children:
  - Global.WaveGenerator.#ctor(EnemyInstantiationService,WorldCellBalanceService,EnemyPrefabContainer,EnemyTypeService)
  - Global.WaveGenerator.GenerateWave
  langs:
  - csharp
  - vb
  name: WaveGenerator
  nameWithType: WaveGenerator
  fullName: WaveGenerator
  type: Class
  source:
    id: WaveGenerator
    path: ''
    startLine: 2604
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public class WaveGenerator
    content.vb: Public Class WaveGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.WaveGenerator.#ctor(EnemyInstantiationService,WorldCellBalanceService,EnemyPrefabContainer,EnemyTypeService)
  commentId: M:Global.WaveGenerator.#ctor(EnemyInstantiationService,WorldCellBalanceService,EnemyPrefabContainer,EnemyTypeService)
  id: '#ctor(EnemyInstantiationService,WorldCellBalanceService,EnemyPrefabContainer,EnemyTypeService)'
  parent: Global.WaveGenerator
  langs:
  - csharp
  - vb
  name: WaveGenerator(EnemyInstantiationService, WorldCellBalanceService, EnemyPrefabContainer, EnemyTypeService)
  nameWithType: WaveGenerator.WaveGenerator(EnemyInstantiationService, WorldCellBalanceService, EnemyPrefabContainer, EnemyTypeService)
  fullName: WaveGenerator.WaveGenerator(EnemyInstantiationService, WorldCellBalanceService, EnemyPrefabContainer, EnemyTypeService)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2611
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public WaveGenerator(EnemyInstantiationService nemyInstantiationService, WorldCellBalanceService worldCellBalanceService, EnemyPrefabContainer enemyPrefabContainer, EnemyTypeService enemyTypeService)
    parameters:
    - id: nemyInstantiationService
      type: Global.EnemyInstantiationService
    - id: worldCellBalanceService
      type: Global.WorldCellBalanceService
    - id: enemyPrefabContainer
      type: Global.EnemyPrefabContainer
    - id: enemyTypeService
      type: Global.EnemyTypeService
    content.vb: Public Sub New(nemyInstantiationService As EnemyInstantiationService, worldCellBalanceService As WorldCellBalanceService, enemyPrefabContainer As EnemyPrefabContainer, enemyTypeService As EnemyTypeService)
  overload: Global.WaveGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.WaveGenerator.GenerateWave
  commentId: M:Global.WaveGenerator.GenerateWave
  id: GenerateWave
  parent: Global.WaveGenerator
  langs:
  - csharp
  - vb
  name: GenerateWave()
  nameWithType: WaveGenerator.GenerateWave()
  fullName: WaveGenerator.GenerateWave()
  type: Method
  source:
    id: GenerateWave
    path: ''
    startLine: 2620
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public Wave GenerateWave()
    return:
      type: Global.Wave
    content.vb: Public Function GenerateWave As Wave
  overload: Global.WaveGenerator.GenerateWave*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.WaveGenerator.#ctor*
  commentId: Overload:Global.WaveGenerator.#ctor
  name: WaveGenerator
  nameWithType: WaveGenerator.WaveGenerator
  fullName: WaveGenerator.WaveGenerator
- uid: Global.EnemyInstantiationService
  commentId: T:Global.EnemyInstantiationService
  name: EnemyInstantiationService
  nameWithType: EnemyInstantiationService
  fullName: EnemyInstantiationService
- uid: Global.WorldCellBalanceService
  commentId: '!:Global.WorldCellBalanceService'
  isExternal: true
  name: WorldCellBalanceService
  nameWithType: WorldCellBalanceService
  fullName: WorldCellBalanceService
- uid: Global.EnemyPrefabContainer
  commentId: T:Global.EnemyPrefabContainer
  name: EnemyPrefabContainer
  nameWithType: EnemyPrefabContainer
  fullName: EnemyPrefabContainer
- uid: Global.EnemyTypeService
  commentId: T:Global.EnemyTypeService
  name: EnemyTypeService
  nameWithType: EnemyTypeService
  fullName: EnemyTypeService
- uid: Global.WaveGenerator.GenerateWave*
  commentId: Overload:Global.WaveGenerator.GenerateWave
  name: GenerateWave
  nameWithType: WaveGenerator.GenerateWave
  fullName: WaveGenerator.GenerateWave
- uid: Global.Wave
  commentId: T:Global.Wave
  name: Wave
  nameWithType: Wave
  fullName: Wave
