### YamlMime:ManagedReference
items:
- uid: Global.WorldCellBuildingService
  commentId: T:Global.WorldCellBuildingService
  id: WorldCellBuildingService
  parent: Global
  children:
  - Global.WorldCellBuildingService.#ctor(WorldCellInstantiationService,WorldCellGridService,AbstractInputService)
  - Global.WorldCellBuildingService._activeCard
  - Global.WorldCellBuildingService._activeCell
  - Global.WorldCellBuildingService._alignerService
  - Global.WorldCellBuildingService._inputService
  - Global.WorldCellBuildingService._instantiatingService
  - Global.WorldCellBuildingService.InstantiateWorldCellFromCard(TowerCard,Type)
  langs:
  - csharp
  - vb
  name: WorldCellBuildingService
  nameWithType: WorldCellBuildingService
  fullName: WorldCellBuildingService
  type: Class
  source:
    id: WorldCellBuildingService
    path: ''
    startLine: 2785
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public class WorldCellBuildingService
    content.vb: Public Class WorldCellBuildingService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.WorldCellBuildingService._activeCard
  commentId: F:Global.WorldCellBuildingService._activeCard
  id: _activeCard
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: _activeCard
  nameWithType: WorldCellBuildingService._activeCard
  fullName: WorldCellBuildingService._activeCard
  type: Field
  source:
    id: _activeCard
    path: ''
    startLine: 2787
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected IPoolableObject _activeCard
    return:
      type: Global.IPoolableObject
    content.vb: Protected _activeCard As IPoolableObject
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.WorldCellBuildingService._instantiatingService
  commentId: F:Global.WorldCellBuildingService._instantiatingService
  id: _instantiatingService
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: _instantiatingService
  nameWithType: WorldCellBuildingService._instantiatingService
  fullName: WorldCellBuildingService._instantiatingService
  type: Field
  source:
    id: _instantiatingService
    path: ''
    startLine: 2788
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected WorldCellInstantiationService _instantiatingService
    return:
      type: Global.WorldCellInstantiationService
    content.vb: Protected _instantiatingService As WorldCellInstantiationService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.WorldCellBuildingService._alignerService
  commentId: F:Global.WorldCellBuildingService._alignerService
  id: _alignerService
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: _alignerService
  nameWithType: WorldCellBuildingService._alignerService
  fullName: WorldCellBuildingService._alignerService
  type: Field
  source:
    id: _alignerService
    path: ''
    startLine: 2789
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected WorldCellGridService _alignerService
    return:
      type: Global.WorldCellGridService
    content.vb: Protected _alignerService As WorldCellGridService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.WorldCellBuildingService._inputService
  commentId: F:Global.WorldCellBuildingService._inputService
  id: _inputService
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: _inputService
  nameWithType: WorldCellBuildingService._inputService
  fullName: WorldCellBuildingService._inputService
  type: Field
  source:
    id: _inputService
    path: ''
    startLine: 2791
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AbstractInputService _inputService
    return:
      type: Global.AbstractInputService
    content.vb: Protected _inputService As AbstractInputService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.WorldCellBuildingService._activeCell
  commentId: F:Global.WorldCellBuildingService._activeCell
  id: _activeCell
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: _activeCell
  nameWithType: WorldCellBuildingService._activeCell
  fullName: WorldCellBuildingService._activeCell
  type: Field
  source:
    id: _activeCell
    path: ''
    startLine: 2794
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AbstractWorldCell _activeCell
    return:
      type: Global.AbstractWorldCell
    content.vb: Protected _activeCell As AbstractWorldCell
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.WorldCellBuildingService.#ctor(WorldCellInstantiationService,WorldCellGridService,AbstractInputService)
  commentId: M:Global.WorldCellBuildingService.#ctor(WorldCellInstantiationService,WorldCellGridService,AbstractInputService)
  id: '#ctor(WorldCellInstantiationService,WorldCellGridService,AbstractInputService)'
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: WorldCellBuildingService(WorldCellInstantiationService, WorldCellGridService, AbstractInputService)
  nameWithType: WorldCellBuildingService.WorldCellBuildingService(WorldCellInstantiationService, WorldCellGridService, AbstractInputService)
  fullName: WorldCellBuildingService.WorldCellBuildingService(WorldCellInstantiationService, WorldCellGridService, AbstractInputService)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2796
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public WorldCellBuildingService(WorldCellInstantiationService towerInstantiatingService, WorldCellGridService alignerService, AbstractInputService inputService)
    parameters:
    - id: towerInstantiatingService
      type: Global.WorldCellInstantiationService
    - id: alignerService
      type: Global.WorldCellGridService
    - id: inputService
      type: Global.AbstractInputService
    content.vb: Public Sub New(towerInstantiatingService As WorldCellInstantiationService, alignerService As WorldCellGridService, inputService As AbstractInputService)
  overload: Global.WorldCellBuildingService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.WorldCellBuildingService.InstantiateWorldCellFromCard(TowerCard,Type)
  commentId: M:Global.WorldCellBuildingService.InstantiateWorldCellFromCard(TowerCard,Type)
  id: InstantiateWorldCellFromCard(TowerCard,Type)
  parent: Global.WorldCellBuildingService
  langs:
  - csharp
  - vb
  name: InstantiateWorldCellFromCard(TowerCard, Type)
  nameWithType: WorldCellBuildingService.InstantiateWorldCellFromCard(TowerCard, Type)
  fullName: WorldCellBuildingService.InstantiateWorldCellFromCard(TowerCard, Type)
  type: Method
  source:
    id: InstantiateWorldCellFromCard
    path: ''
    startLine: 2823
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void InstantiateWorldCellFromCard(TowerCard towerCard, Type worldCellType)
    parameters:
    - id: towerCard
      type: Global.TowerCard
    - id: worldCellType
      type: Global.Type
    content.vb: Public Sub InstantiateWorldCellFromCard(towerCard As TowerCard, worldCellType As Type)
  overload: Global.WorldCellBuildingService.InstantiateWorldCellFromCard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.IPoolableObject
  commentId: T:Global.IPoolableObject
  name: IPoolableObject
  nameWithType: IPoolableObject
  fullName: IPoolableObject
- uid: Global.WorldCellInstantiationService
  commentId: T:Global.WorldCellInstantiationService
  name: WorldCellInstantiationService
  nameWithType: WorldCellInstantiationService
  fullName: WorldCellInstantiationService
- uid: Global.WorldCellGridService
  isExternal: true
  name: WorldCellGridService
  nameWithType: WorldCellGridService
  fullName: WorldCellGridService
- uid: Global.AbstractInputService
  isExternal: true
  name: AbstractInputService
  nameWithType: AbstractInputService
  fullName: AbstractInputService
- uid: Global.AbstractWorldCell
  isExternal: true
  name: AbstractWorldCell
  nameWithType: AbstractWorldCell
  fullName: AbstractWorldCell
- uid: Global.WorldCellBuildingService.#ctor*
  commentId: Overload:Global.WorldCellBuildingService.#ctor
  name: WorldCellBuildingService
  nameWithType: WorldCellBuildingService.WorldCellBuildingService
  fullName: WorldCellBuildingService.WorldCellBuildingService
- uid: Global.WorldCellBuildingService.InstantiateWorldCellFromCard*
  commentId: Overload:Global.WorldCellBuildingService.InstantiateWorldCellFromCard
  name: InstantiateWorldCellFromCard
  nameWithType: WorldCellBuildingService.InstantiateWorldCellFromCard
  fullName: WorldCellBuildingService.InstantiateWorldCellFromCard
- uid: Global.TowerCard
  commentId: T:Global.TowerCard
  name: TowerCard
  nameWithType: TowerCard
  fullName: TowerCard
- uid: Global.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
