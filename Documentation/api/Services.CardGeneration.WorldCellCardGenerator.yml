### YamlMime:ManagedReference
items:
- uid: Services.CardGeneration.WorldCellCardGenerator
  commentId: T:Services.CardGeneration.WorldCellCardGenerator
  id: WorldCellCardGenerator
  parent: Services.CardGeneration
  children:
  - Services.CardGeneration.WorldCellCardGenerator.#ctor(Services.CardGeneration.WorldCellCardsConfig)
  - Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType(System.Type)
  langs:
  - csharp
  - vb
  name: WorldCellCardGenerator
  nameWithType: WorldCellCardGenerator
  fullName: Services.CardGeneration.WorldCellCardGenerator
  type: Class
  source:
    id: WorldCellCardGenerator
    path: ''
    startLine: 2146
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: public class WorldCellCardGenerator
    content.vb: Public Class WorldCellCardGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Services.CardGeneration.WorldCellCardGenerator.#ctor(Services.CardGeneration.WorldCellCardsConfig)
  commentId: M:Services.CardGeneration.WorldCellCardGenerator.#ctor(Services.CardGeneration.WorldCellCardsConfig)
  id: '#ctor(Services.CardGeneration.WorldCellCardsConfig)'
  parent: Services.CardGeneration.WorldCellCardGenerator
  langs:
  - csharp
  - vb
  name: WorldCellCardGenerator(WorldCellCardsConfig)
  nameWithType: WorldCellCardGenerator.WorldCellCardGenerator(WorldCellCardsConfig)
  fullName: Services.CardGeneration.WorldCellCardGenerator.WorldCellCardGenerator(Services.CardGeneration.WorldCellCardsConfig)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2154
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: public WorldCellCardGenerator(WorldCellCardsConfig worldCellCardsConfig)
    parameters:
    - id: worldCellCardsConfig
      type: Services.CardGeneration.WorldCellCardsConfig
    content.vb: Public Sub New(worldCellCardsConfig As WorldCellCardsConfig)
  overload: Services.CardGeneration.WorldCellCardGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType(System.Type)
  commentId: M:Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType(System.Type)
  id: GetWorldCellType(System.Type)
  parent: Services.CardGeneration.WorldCellCardGenerator
  langs:
  - csharp
  - vb
  name: GetWorldCellType(Type)
  nameWithType: WorldCellCardGenerator.GetWorldCellType(Type)
  fullName: Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType(System.Type)
  type: Method
  source:
    id: GetWorldCellType
    path: ''
    startLine: 2172
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: public Type GetWorldCellType(Type towerType)
    parameters:
    - id: towerType
      type: System.Type
    return:
      type: System.Type
    content.vb: Public Function GetWorldCellType(towerType As Type) As Type
  overload: Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Services.CardGeneration
  commentId: N:Services.CardGeneration
  name: Services.CardGeneration
  nameWithType: Services.CardGeneration
  fullName: Services.CardGeneration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Services.CardGeneration.WorldCellCardGenerator.#ctor*
  commentId: Overload:Services.CardGeneration.WorldCellCardGenerator.#ctor
  name: WorldCellCardGenerator
  nameWithType: WorldCellCardGenerator.WorldCellCardGenerator
  fullName: Services.CardGeneration.WorldCellCardGenerator.WorldCellCardGenerator
- uid: Services.CardGeneration.WorldCellCardsConfig
  commentId: T:Services.CardGeneration.WorldCellCardsConfig
  parent: Services.CardGeneration
  name: WorldCellCardsConfig
  nameWithType: WorldCellCardsConfig
  fullName: Services.CardGeneration.WorldCellCardsConfig
- uid: Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType*
  commentId: Overload:Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType
  name: GetWorldCellType
  nameWithType: WorldCellCardGenerator.GetWorldCellType
  fullName: Services.CardGeneration.WorldCellCardGenerator.GetWorldCellType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
