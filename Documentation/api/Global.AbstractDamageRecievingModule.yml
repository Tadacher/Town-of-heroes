### YamlMime:ManagedReference
items:
- uid: Global.AbstractDamageRecievingModule
  commentId: T:Global.AbstractDamageRecievingModule
  id: AbstractDamageRecievingModule
  parent: Global
  children:
  - Global.AbstractDamageRecievingModule.#ctor(Transform,DamageTextService)
  - Global.AbstractDamageRecievingModule._damageTextService
  - Global.AbstractDamageRecievingModule._unitTransform
  - Global.AbstractDamageRecievingModule.CalculateRecievedDamage(System.Int32)
  langs:
  - csharp
  - vb
  name: AbstractDamageRecievingModule
  nameWithType: AbstractDamageRecievingModule
  fullName: AbstractDamageRecievingModule
  type: Class
  source:
    id: AbstractDamageRecievingModule
    path: ''
    startLine: 177
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public abstract class AbstractDamageRecievingModule
    content.vb: Public MustInherit Class AbstractDamageRecievingModule
  inheritance:
  - System.Object
  derivedClasses:
  - Global.DefaultHealthModule
  - Global.DodgeDamageRecievingModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Global.AbstractDamageRecievingModule._damageTextService
  commentId: F:Global.AbstractDamageRecievingModule._damageTextService
  id: _damageTextService
  parent: Global.AbstractDamageRecievingModule
  langs:
  - csharp
  - vb
  name: _damageTextService
  nameWithType: AbstractDamageRecievingModule._damageTextService
  fullName: AbstractDamageRecievingModule._damageTextService
  type: Field
  source:
    id: _damageTextService
    path: ''
    startLine: 179
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected DamageTextService _damageTextService
    return:
      type: Global.DamageTextService
    content.vb: Protected _damageTextService As DamageTextService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractDamageRecievingModule._unitTransform
  commentId: F:Global.AbstractDamageRecievingModule._unitTransform
  id: _unitTransform
  parent: Global.AbstractDamageRecievingModule
  langs:
  - csharp
  - vb
  name: _unitTransform
  nameWithType: AbstractDamageRecievingModule._unitTransform
  fullName: AbstractDamageRecievingModule._unitTransform
  type: Field
  source:
    id: _unitTransform
    path: ''
    startLine: 180
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected Transform _unitTransform
    return:
      type: Global.Transform
    content.vb: Protected _unitTransform As Transform
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractDamageRecievingModule.#ctor(Transform,DamageTextService)
  commentId: M:Global.AbstractDamageRecievingModule.#ctor(Transform,DamageTextService)
  id: '#ctor(Transform,DamageTextService)'
  parent: Global.AbstractDamageRecievingModule
  langs:
  - csharp
  - vb
  name: AbstractDamageRecievingModule(Transform, DamageTextService)
  nameWithType: AbstractDamageRecievingModule.AbstractDamageRecievingModule(Transform, DamageTextService)
  fullName: AbstractDamageRecievingModule.AbstractDamageRecievingModule(Transform, DamageTextService)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 182
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AbstractDamageRecievingModule(Transform unitTransform, DamageTextService damageTextService)
    parameters:
    - id: unitTransform
      type: Global.Transform
    - id: damageTextService
      type: Global.DamageTextService
    content.vb: Protected Sub New(unitTransform As Transform, damageTextService As DamageTextService)
  overload: Global.AbstractDamageRecievingModule.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractDamageRecievingModule.CalculateRecievedDamage(System.Int32)
  commentId: M:Global.AbstractDamageRecievingModule.CalculateRecievedDamage(System.Int32)
  id: CalculateRecievedDamage(System.Int32)
  parent: Global.AbstractDamageRecievingModule
  langs:
  - csharp
  - vb
  name: CalculateRecievedDamage(Int32)
  nameWithType: AbstractDamageRecievingModule.CalculateRecievedDamage(Int32)
  fullName: AbstractDamageRecievingModule.CalculateRecievedDamage(System.Int32)
  type: Method
  source:
    id: CalculateRecievedDamage
    path: ''
    startLine: 188
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public abstract int CalculateRecievedDamage(int damage)
    parameters:
    - id: damage
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public MustOverride Function CalculateRecievedDamage(damage As Integer) As Integer
  overload: Global.AbstractDamageRecievingModule.CalculateRecievedDamage*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.DamageTextService
  isExternal: true
  name: DamageTextService
  nameWithType: DamageTextService
  fullName: DamageTextService
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: Global.AbstractDamageRecievingModule.#ctor*
  commentId: Overload:Global.AbstractDamageRecievingModule.#ctor
  name: AbstractDamageRecievingModule
  nameWithType: AbstractDamageRecievingModule.AbstractDamageRecievingModule
  fullName: AbstractDamageRecievingModule.AbstractDamageRecievingModule
- uid: Global.AbstractDamageRecievingModule.CalculateRecievedDamage*
  commentId: Overload:Global.AbstractDamageRecievingModule.CalculateRecievedDamage
  name: CalculateRecievedDamage
  nameWithType: AbstractDamageRecievingModule.CalculateRecievedDamage
  fullName: AbstractDamageRecievingModule.CalculateRecievedDamage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
