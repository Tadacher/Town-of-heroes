### YamlMime:ManagedReference
items:
- uid: Services.CardGeneration.CardInstantiationService
  commentId: T:Services.CardGeneration.CardInstantiationService
  id: CardInstantiationService
  parent: Services.CardGeneration
  children:
  - Services.CardGeneration.CardInstantiationService.#ctor(DiContainer,TowerCardSpawnMarker)
  - Services.CardGeneration.CardInstantiationService.AddNewFactory(System.Type)
  - Services.CardGeneration.CardInstantiationService.GetNewFactory(System.Type)
  - Services.CardGeneration.CardInstantiationService.ReturnObject(System.Type)
  langs:
  - csharp
  - vb
  name: CardInstantiationService
  nameWithType: CardInstantiationService
  fullName: Services.CardGeneration.CardInstantiationService
  type: Class
  source:
    id: CardInstantiationService
    path: ''
    startLine: 2013
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: 'public class CardInstantiationService : AbstractInstantiationService<TowerCard>'
    content.vb: >-
      Public Class CardInstantiationService
          Inherits AbstractInstantiationService(Of TowerCard)
  inheritance:
  - System.Object
  - Global.AbstractInstantiationService{TowerCard}
  inheritedMembers:
  - Global.AbstractInstantiationService{TowerCard}._container
  - Global.AbstractInstantiationService{TowerCard}._factories
  - Global.AbstractInstantiationService{TowerCard}._productionPrefabPath
  - Global.AbstractInstantiationService{TowerCard}.LoadProductPrefab(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Services.CardGeneration.CardInstantiationService.#ctor(DiContainer,TowerCardSpawnMarker)
  commentId: M:Services.CardGeneration.CardInstantiationService.#ctor(DiContainer,TowerCardSpawnMarker)
  id: '#ctor(DiContainer,TowerCardSpawnMarker)'
  parent: Services.CardGeneration.CardInstantiationService
  langs:
  - csharp
  - vb
  name: CardInstantiationService(DiContainer, TowerCardSpawnMarker)
  nameWithType: CardInstantiationService.CardInstantiationService(DiContainer, TowerCardSpawnMarker)
  fullName: Services.CardGeneration.CardInstantiationService.CardInstantiationService(DiContainer, TowerCardSpawnMarker)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2018
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: public CardInstantiationService(DiContainer diContainer, TowerCardSpawnMarker towerCardSpawnMarker)
    parameters:
    - id: diContainer
      type: Global.DiContainer
    - id: towerCardSpawnMarker
      type: Global.TowerCardSpawnMarker
    content.vb: Public Sub New(diContainer As DiContainer, towerCardSpawnMarker As TowerCardSpawnMarker)
  overload: Services.CardGeneration.CardInstantiationService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Services.CardGeneration.CardInstantiationService.ReturnObject(System.Type)
  commentId: M:Services.CardGeneration.CardInstantiationService.ReturnObject(System.Type)
  id: ReturnObject(System.Type)
  parent: Services.CardGeneration.CardInstantiationService
  langs:
  - csharp
  - vb
  name: ReturnObject(Type)
  nameWithType: CardInstantiationService.ReturnObject(Type)
  fullName: Services.CardGeneration.CardInstantiationService.ReturnObject(System.Type)
  type: Method
  source:
    id: ReturnObject
    path: ''
    startLine: 2023
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: public override TowerCard ReturnObject(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: Global.TowerCard
    content.vb: Public Overrides Function ReturnObject(type As Type) As TowerCard
  overridden: Global.AbstractInstantiationService{TowerCard}.ReturnObject(System.Type)
  overload: Services.CardGeneration.CardInstantiationService.ReturnObject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Services.CardGeneration.CardInstantiationService.AddNewFactory(System.Type)
  commentId: M:Services.CardGeneration.CardInstantiationService.AddNewFactory(System.Type)
  id: AddNewFactory(System.Type)
  parent: Services.CardGeneration.CardInstantiationService
  langs:
  - csharp
  - vb
  name: AddNewFactory(Type)
  nameWithType: CardInstantiationService.AddNewFactory(Type)
  fullName: Services.CardGeneration.CardInstantiationService.AddNewFactory(System.Type)
  type: Method
  source:
    id: AddNewFactory
    path: ''
    startLine: 2034
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: protected override void AddNewFactory(Type type)
    parameters:
    - id: type
      type: System.Type
    content.vb: Protected Overrides Sub AddNewFactory(type As Type)
  overridden: Global.AbstractInstantiationService{TowerCard}.AddNewFactory(System.Type)
  overload: Services.CardGeneration.CardInstantiationService.AddNewFactory*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Services.CardGeneration.CardInstantiationService.GetNewFactory(System.Type)
  commentId: M:Services.CardGeneration.CardInstantiationService.GetNewFactory(System.Type)
  id: GetNewFactory(System.Type)
  parent: Services.CardGeneration.CardInstantiationService
  langs:
  - csharp
  - vb
  name: GetNewFactory(Type)
  nameWithType: CardInstantiationService.GetNewFactory(Type)
  fullName: Services.CardGeneration.CardInstantiationService.GetNewFactory(System.Type)
  type: Method
  source:
    id: GetNewFactory
    path: ''
    startLine: 2037
  assemblies:
  - cs.temp.dll
  namespace: Services.CardGeneration
  syntax:
    content: protected override IFactory<TowerCard> GetNewFactory(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: Global.IFactory{TowerCard}
    content.vb: Protected Overrides Function GetNewFactory(type As Type) As IFactory(Of TowerCard)
  overridden: Global.AbstractInstantiationService{TowerCard}.GetNewFactory(System.Type)
  overload: Services.CardGeneration.CardInstantiationService.GetNewFactory*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Services.CardGeneration
  commentId: N:Services.CardGeneration
  name: Services.CardGeneration
  nameWithType: Services.CardGeneration
  fullName: Services.CardGeneration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.AbstractInstantiationService{TowerCard}
  commentId: T:Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1
  name: AbstractInstantiationService<TowerCard>
  nameWithType: AbstractInstantiationService<TowerCard>
  fullName: AbstractInstantiationService<TowerCard>
  nameWithType.vb: AbstractInstantiationService(Of TowerCard)
  fullName.vb: AbstractInstantiationService(Of TowerCard)
  name.vb: AbstractInstantiationService(Of TowerCard)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1
    name: AbstractInstantiationService
    nameWithType: AbstractInstantiationService
    fullName: AbstractInstantiationService
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.TowerCard
    name: TowerCard
    nameWithType: TowerCard
    fullName: TowerCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.AbstractInstantiationService`1
    name: AbstractInstantiationService
    nameWithType: AbstractInstantiationService
    fullName: AbstractInstantiationService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.TowerCard
    name: TowerCard
    nameWithType: TowerCard
    fullName: TowerCard
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractInstantiationService{TowerCard}._container
  commentId: F:Global.AbstractInstantiationService{TowerCard}._container
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1._container
  name: _container
  nameWithType: AbstractInstantiationService<TowerCard>._container
  fullName: AbstractInstantiationService<TowerCard>._container
  nameWithType.vb: AbstractInstantiationService(Of TowerCard)._container
  fullName.vb: AbstractInstantiationService(Of TowerCard)._container
- uid: Global.AbstractInstantiationService{TowerCard}._factories
  commentId: F:Global.AbstractInstantiationService{TowerCard}._factories
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1._factories
  name: _factories
  nameWithType: AbstractInstantiationService<TowerCard>._factories
  fullName: AbstractInstantiationService<TowerCard>._factories
  nameWithType.vb: AbstractInstantiationService(Of TowerCard)._factories
  fullName.vb: AbstractInstantiationService(Of TowerCard)._factories
- uid: Global.AbstractInstantiationService{TowerCard}._productionPrefabPath
  commentId: F:Global.AbstractInstantiationService{TowerCard}._productionPrefabPath
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1._productionPrefabPath
  name: _productionPrefabPath
  nameWithType: AbstractInstantiationService<TowerCard>._productionPrefabPath
  fullName: AbstractInstantiationService<TowerCard>._productionPrefabPath
  nameWithType.vb: AbstractInstantiationService(Of TowerCard)._productionPrefabPath
  fullName.vb: AbstractInstantiationService(Of TowerCard)._productionPrefabPath
- uid: Global.AbstractInstantiationService{TowerCard}.LoadProductPrefab(System.Type)
  commentId: M:Global.AbstractInstantiationService{TowerCard}.LoadProductPrefab(System.Type)
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
  name: LoadProductPrefab(Type)
  nameWithType: AbstractInstantiationService<TowerCard>.LoadProductPrefab(Type)
  fullName: AbstractInstantiationService<TowerCard>.LoadProductPrefab(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TowerCard).LoadProductPrefab(Type)
  fullName.vb: AbstractInstantiationService(Of TowerCard).LoadProductPrefab(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
    name: LoadProductPrefab
    nameWithType: AbstractInstantiationService<TowerCard>.LoadProductPrefab
    fullName: AbstractInstantiationService<TowerCard>.LoadProductPrefab
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
    name: LoadProductPrefab
    nameWithType: AbstractInstantiationService(Of TowerCard).LoadProductPrefab
    fullName: AbstractInstantiationService(Of TowerCard).LoadProductPrefab
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AbstractInstantiationService`1
  commentId: T:Global.AbstractInstantiationService`1
  name: AbstractInstantiationService<TProduction>
  nameWithType: AbstractInstantiationService<TProduction>
  fullName: AbstractInstantiationService<TProduction>
  nameWithType.vb: AbstractInstantiationService(Of TProduction)
  fullName.vb: AbstractInstantiationService(Of TProduction)
  name.vb: AbstractInstantiationService(Of TProduction)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1
    name: AbstractInstantiationService
    nameWithType: AbstractInstantiationService
    fullName: AbstractInstantiationService
  - name: <
    nameWithType: <
    fullName: <
  - name: TProduction
    nameWithType: TProduction
    fullName: TProduction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.AbstractInstantiationService`1
    name: AbstractInstantiationService
    nameWithType: AbstractInstantiationService
    fullName: AbstractInstantiationService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProduction
    nameWithType: TProduction
    fullName: TProduction
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractInstantiationService`1._container
  commentId: F:Global.AbstractInstantiationService`1._container
  name: _container
  nameWithType: AbstractInstantiationService<TProduction>._container
  fullName: AbstractInstantiationService<TProduction>._container
  nameWithType.vb: AbstractInstantiationService(Of TProduction)._container
  fullName.vb: AbstractInstantiationService(Of TProduction)._container
- uid: Global.AbstractInstantiationService`1._factories
  commentId: F:Global.AbstractInstantiationService`1._factories
  name: _factories
  nameWithType: AbstractInstantiationService<TProduction>._factories
  fullName: AbstractInstantiationService<TProduction>._factories
  nameWithType.vb: AbstractInstantiationService(Of TProduction)._factories
  fullName.vb: AbstractInstantiationService(Of TProduction)._factories
- uid: Global.AbstractInstantiationService`1._productionPrefabPath
  commentId: F:Global.AbstractInstantiationService`1._productionPrefabPath
  name: _productionPrefabPath
  nameWithType: AbstractInstantiationService<TProduction>._productionPrefabPath
  fullName: AbstractInstantiationService<TProduction>._productionPrefabPath
  nameWithType.vb: AbstractInstantiationService(Of TProduction)._productionPrefabPath
  fullName.vb: AbstractInstantiationService(Of TProduction)._productionPrefabPath
- uid: Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
  commentId: M:Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
  isExternal: true
  name: LoadProductPrefab(Type)
  nameWithType: AbstractInstantiationService<TProduction>.LoadProductPrefab(Type)
  fullName: AbstractInstantiationService<TProduction>.LoadProductPrefab(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TProduction).LoadProductPrefab(Type)
  fullName.vb: AbstractInstantiationService(Of TProduction).LoadProductPrefab(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
    name: LoadProductPrefab
    nameWithType: AbstractInstantiationService<TProduction>.LoadProductPrefab
    fullName: AbstractInstantiationService<TProduction>.LoadProductPrefab
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.LoadProductPrefab(System.Type)
    name: LoadProductPrefab
    nameWithType: AbstractInstantiationService(Of TProduction).LoadProductPrefab
    fullName: AbstractInstantiationService(Of TProduction).LoadProductPrefab
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Services.CardGeneration.CardInstantiationService.#ctor*
  commentId: Overload:Services.CardGeneration.CardInstantiationService.#ctor
  name: CardInstantiationService
  nameWithType: CardInstantiationService.CardInstantiationService
  fullName: Services.CardGeneration.CardInstantiationService.CardInstantiationService
- uid: Global.DiContainer
  isExternal: true
  name: DiContainer
  nameWithType: DiContainer
  fullName: DiContainer
- uid: Global.TowerCardSpawnMarker
  commentId: '!:Global.TowerCardSpawnMarker'
  isExternal: true
  name: TowerCardSpawnMarker
  nameWithType: TowerCardSpawnMarker
  fullName: TowerCardSpawnMarker
- uid: Global.AbstractInstantiationService{TowerCard}.ReturnObject(System.Type)
  commentId: M:Global.AbstractInstantiationService{TowerCard}.ReturnObject(System.Type)
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1.ReturnObject(System.Type)
  name: ReturnObject(Type)
  nameWithType: AbstractInstantiationService<TowerCard>.ReturnObject(Type)
  fullName: AbstractInstantiationService<TowerCard>.ReturnObject(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TowerCard).ReturnObject(Type)
  fullName.vb: AbstractInstantiationService(Of TowerCard).ReturnObject(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.ReturnObject(System.Type)
    name: ReturnObject
    nameWithType: AbstractInstantiationService<TowerCard>.ReturnObject
    fullName: AbstractInstantiationService<TowerCard>.ReturnObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.ReturnObject(System.Type)
    name: ReturnObject
    nameWithType: AbstractInstantiationService(Of TowerCard).ReturnObject
    fullName: AbstractInstantiationService(Of TowerCard).ReturnObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Services.CardGeneration.CardInstantiationService.ReturnObject*
  commentId: Overload:Services.CardGeneration.CardInstantiationService.ReturnObject
  name: ReturnObject
  nameWithType: CardInstantiationService.ReturnObject
  fullName: Services.CardGeneration.CardInstantiationService.ReturnObject
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Global.TowerCard
  commentId: T:Global.TowerCard
  name: TowerCard
  nameWithType: TowerCard
  fullName: TowerCard
- uid: Global.AbstractInstantiationService`1.ReturnObject(System.Type)
  commentId: M:Global.AbstractInstantiationService`1.ReturnObject(System.Type)
  isExternal: true
  name: ReturnObject(Type)
  nameWithType: AbstractInstantiationService<TProduction>.ReturnObject(Type)
  fullName: AbstractInstantiationService<TProduction>.ReturnObject(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TProduction).ReturnObject(Type)
  fullName.vb: AbstractInstantiationService(Of TProduction).ReturnObject(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.ReturnObject(System.Type)
    name: ReturnObject
    nameWithType: AbstractInstantiationService<TProduction>.ReturnObject
    fullName: AbstractInstantiationService<TProduction>.ReturnObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.ReturnObject(System.Type)
    name: ReturnObject
    nameWithType: AbstractInstantiationService(Of TProduction).ReturnObject
    fullName: AbstractInstantiationService(Of TProduction).ReturnObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractInstantiationService{TowerCard}.AddNewFactory(System.Type)
  commentId: M:Global.AbstractInstantiationService{TowerCard}.AddNewFactory(System.Type)
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
  name: AddNewFactory(Type)
  nameWithType: AbstractInstantiationService<TowerCard>.AddNewFactory(Type)
  fullName: AbstractInstantiationService<TowerCard>.AddNewFactory(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TowerCard).AddNewFactory(Type)
  fullName.vb: AbstractInstantiationService(Of TowerCard).AddNewFactory(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
    name: AddNewFactory
    nameWithType: AbstractInstantiationService<TowerCard>.AddNewFactory
    fullName: AbstractInstantiationService<TowerCard>.AddNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
    name: AddNewFactory
    nameWithType: AbstractInstantiationService(Of TowerCard).AddNewFactory
    fullName: AbstractInstantiationService(Of TowerCard).AddNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Services.CardGeneration.CardInstantiationService.AddNewFactory*
  commentId: Overload:Services.CardGeneration.CardInstantiationService.AddNewFactory
  name: AddNewFactory
  nameWithType: CardInstantiationService.AddNewFactory
  fullName: Services.CardGeneration.CardInstantiationService.AddNewFactory
- uid: Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
  commentId: M:Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
  isExternal: true
  name: AddNewFactory(Type)
  nameWithType: AbstractInstantiationService<TProduction>.AddNewFactory(Type)
  fullName: AbstractInstantiationService<TProduction>.AddNewFactory(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TProduction).AddNewFactory(Type)
  fullName.vb: AbstractInstantiationService(Of TProduction).AddNewFactory(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
    name: AddNewFactory
    nameWithType: AbstractInstantiationService<TProduction>.AddNewFactory
    fullName: AbstractInstantiationService<TProduction>.AddNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.AddNewFactory(System.Type)
    name: AddNewFactory
    nameWithType: AbstractInstantiationService(Of TProduction).AddNewFactory
    fullName: AbstractInstantiationService(Of TProduction).AddNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractInstantiationService{TowerCard}.GetNewFactory(System.Type)
  commentId: M:Global.AbstractInstantiationService{TowerCard}.GetNewFactory(System.Type)
  parent: Global.AbstractInstantiationService{TowerCard}
  definition: Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
  name: GetNewFactory(Type)
  nameWithType: AbstractInstantiationService<TowerCard>.GetNewFactory(Type)
  fullName: AbstractInstantiationService<TowerCard>.GetNewFactory(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TowerCard).GetNewFactory(Type)
  fullName.vb: AbstractInstantiationService(Of TowerCard).GetNewFactory(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
    name: GetNewFactory
    nameWithType: AbstractInstantiationService<TowerCard>.GetNewFactory
    fullName: AbstractInstantiationService<TowerCard>.GetNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
    name: GetNewFactory
    nameWithType: AbstractInstantiationService(Of TowerCard).GetNewFactory
    fullName: AbstractInstantiationService(Of TowerCard).GetNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Services.CardGeneration.CardInstantiationService.GetNewFactory*
  commentId: Overload:Services.CardGeneration.CardInstantiationService.GetNewFactory
  name: GetNewFactory
  nameWithType: CardInstantiationService.GetNewFactory
  fullName: Services.CardGeneration.CardInstantiationService.GetNewFactory
- uid: Global.IFactory{TowerCard}
  commentId: T:Global.IFactory{TowerCard}
  definition: Global.IFactory`1
  name: IFactory<TowerCard>
  nameWithType: IFactory<TowerCard>
  fullName: IFactory<TowerCard>
  nameWithType.vb: IFactory(Of TowerCard)
  fullName.vb: IFactory(Of TowerCard)
  name.vb: IFactory(Of TowerCard)
  spec.csharp:
  - uid: Global.IFactory`1
    name: IFactory
    nameWithType: IFactory
    fullName: IFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.TowerCard
    name: TowerCard
    nameWithType: TowerCard
    fullName: TowerCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.IFactory`1
    name: IFactory
    nameWithType: IFactory
    fullName: IFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.TowerCard
    name: TowerCard
    nameWithType: TowerCard
    fullName: TowerCard
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
  commentId: M:Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
  isExternal: true
  name: GetNewFactory(Type)
  nameWithType: AbstractInstantiationService<TProduction>.GetNewFactory(Type)
  fullName: AbstractInstantiationService<TProduction>.GetNewFactory(System.Type)
  nameWithType.vb: AbstractInstantiationService(Of TProduction).GetNewFactory(Type)
  fullName.vb: AbstractInstantiationService(Of TProduction).GetNewFactory(System.Type)
  spec.csharp:
  - uid: Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
    name: GetNewFactory
    nameWithType: AbstractInstantiationService<TProduction>.GetNewFactory
    fullName: AbstractInstantiationService<TProduction>.GetNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.AbstractInstantiationService`1.GetNewFactory(System.Type)
    name: GetNewFactory
    nameWithType: AbstractInstantiationService(Of TProduction).GetNewFactory
    fullName: AbstractInstantiationService(Of TProduction).GetNewFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.IFactory`1
  commentId: T:Global.IFactory`1
  name: IFactory<TType>
  nameWithType: IFactory<TType>
  fullName: IFactory<TType>
  nameWithType.vb: IFactory(Of TType)
  fullName.vb: IFactory(Of TType)
  name.vb: IFactory(Of TType)
  spec.csharp:
  - uid: Global.IFactory`1
    name: IFactory
    nameWithType: IFactory
    fullName: IFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.IFactory`1
    name: IFactory
    nameWithType: IFactory
    fullName: IFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: )
    nameWithType: )
    fullName: )
