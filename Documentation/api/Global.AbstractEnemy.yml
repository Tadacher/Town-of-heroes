### YamlMime:ManagedReference
items:
- uid: Global.AbstractEnemy
  commentId: T:Global.AbstractEnemy
  id: AbstractEnemy
  parent: Global
  children:
  - Global.AbstractEnemy._abstractHealthModule
  - Global.AbstractEnemy._audioSource
  - Global.AbstractEnemy._damage
  - Global.AbstractEnemy._damageTextService
  - Global.AbstractEnemy._deathClip
  - Global.AbstractEnemy._enemyMovementModule
  - Global.AbstractEnemy._expForKill
  - Global.AbstractEnemy._hitpoints
  - Global.AbstractEnemy._maxHitpoints
  - Global.AbstractEnemy._pooler
  - Global.AbstractEnemy._speed
  - Global.AbstractEnemy._stats
  - Global.AbstractEnemy.Die
  - Global.AbstractEnemy.EnemyName
  - Global.AbstractEnemy.Heal(System.Int32)
  - Global.AbstractEnemy.Initialize(AudioSource,DamageTextService,IObjectPooler)
  - Global.AbstractEnemy.IPoolableObject#ReturnToPool
  - Global.AbstractEnemy.MovementModule
  - Global.AbstractEnemy.PlayDeathSound
  - Global.AbstractEnemy.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  - Global.AbstractEnemy.ReInitialize(Vector3)
  - Global.AbstractEnemy.Stats
  langs:
  - csharp
  - vb
  name: AbstractEnemy
  nameWithType: AbstractEnemy
  fullName: AbstractEnemy
  type: Class
  source:
    id: AbstractEnemy
    path: ''
    startLine: 41
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nbase class for all enemies\n"
  example: []
  syntax:
    content: 'public abstract class AbstractEnemy : MonoBehaviour, IHitpointOwner, IMowementModuleOwner, IPoolableObject'
    content.vb: >-
      Public MustInherit Class AbstractEnemy
          Inherits MonoBehaviour
          Implements IHitpointOwner, IMowementModuleOwner, IPoolableObject
  inheritance:
  - System.Object
  derivedClasses:
  - Global.Gobbo
  implements:
  - Global.IHitpointOwner
  - Global.IMowementModuleOwner
  - Global.IPoolableObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Global.AbstractEnemy.EnemyName
  commentId: F:Global.AbstractEnemy.EnemyName
  id: EnemyName
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: EnemyName
  nameWithType: AbstractEnemy.EnemyName
  fullName: AbstractEnemy.EnemyName
  type: Field
  source:
    id: EnemyName
    path: ''
    startLine: 43
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string EnemyName
    return:
      type: System.String
    content.vb: Public EnemyName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.AbstractEnemy.Stats
  commentId: P:Global.AbstractEnemy.Stats
  id: Stats
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: AbstractEnemy.Stats
  fullName: AbstractEnemy.Stats
  type: Property
  source:
    id: Stats
    path: ''
    startLine: 44
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public EnemyStats Stats { get; }
    parameters: []
    return:
      type: Global.EnemyStats
    content.vb: Public ReadOnly Property Stats As EnemyStats
  overload: Global.AbstractEnemy.Stats*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Global.AbstractEnemy._stats
  commentId: F:Global.AbstractEnemy._stats
  id: _stats
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _stats
  nameWithType: AbstractEnemy._stats
  fullName: AbstractEnemy._stats
  type: Field
  source:
    id: _stats
    path: ''
    startLine: 47
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected EnemyStats _stats
    return:
      type: Global.EnemyStats
    content.vb: Protected _stats As EnemyStats
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._hitpoints
  commentId: F:Global.AbstractEnemy._hitpoints
  id: _hitpoints
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _hitpoints
  nameWithType: AbstractEnemy._hitpoints
  fullName: AbstractEnemy._hitpoints
  type: Field
  source:
    id: _hitpoints
    path: ''
    startLine: 49
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected int _hitpoints
    return:
      type: System.Int32
    content.vb: Protected _hitpoints As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._speed
  commentId: F:Global.AbstractEnemy._speed
  id: _speed
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _speed
  nameWithType: AbstractEnemy._speed
  fullName: AbstractEnemy._speed
  type: Field
  source:
    id: _speed
    path: ''
    startLine: 50
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected float _speed
    return:
      type: System.Single
    content.vb: Protected _speed As Single
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._expForKill
  commentId: F:Global.AbstractEnemy._expForKill
  id: _expForKill
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _expForKill
  nameWithType: AbstractEnemy._expForKill
  fullName: AbstractEnemy._expForKill
  type: Field
  source:
    id: _expForKill
    path: ''
    startLine: 51
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected float _expForKill
    return:
      type: System.Single
    content.vb: Protected _expForKill As Single
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._maxHitpoints
  commentId: F:Global.AbstractEnemy._maxHitpoints
  id: _maxHitpoints
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _maxHitpoints
  nameWithType: AbstractEnemy._maxHitpoints
  fullName: AbstractEnemy._maxHitpoints
  type: Field
  source:
    id: _maxHitpoints
    path: ''
    startLine: 52
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected int _maxHitpoints
    return:
      type: System.Int32
    content.vb: Protected _maxHitpoints As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._damage
  commentId: F:Global.AbstractEnemy._damage
  id: _damage
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _damage
  nameWithType: AbstractEnemy._damage
  fullName: AbstractEnemy._damage
  type: Field
  source:
    id: _damage
    path: ''
    startLine: 53
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected int _damage
    return:
      type: System.Int32
    content.vb: Protected _damage As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._pooler
  commentId: F:Global.AbstractEnemy._pooler
  id: _pooler
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _pooler
  nameWithType: AbstractEnemy._pooler
  fullName: AbstractEnemy._pooler
  type: Field
  source:
    id: _pooler
    path: ''
    startLine: 56
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected IObjectPooler _pooler
    return:
      type: Global.IObjectPooler
    content.vb: Protected _pooler As IObjectPooler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._deathClip
  commentId: F:Global.AbstractEnemy._deathClip
  id: _deathClip
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _deathClip
  nameWithType: AbstractEnemy._deathClip
  fullName: AbstractEnemy._deathClip
  type: Field
  source:
    id: _deathClip
    path: ''
    startLine: 58
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AudioClip _deathClip
    return:
      type: Global.AudioClip
    content.vb: Protected _deathClip As AudioClip
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._audioSource
  commentId: F:Global.AbstractEnemy._audioSource
  id: _audioSource
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _audioSource
  nameWithType: AbstractEnemy._audioSource
  fullName: AbstractEnemy._audioSource
  type: Field
  source:
    id: _audioSource
    path: ''
    startLine: 59
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AudioSource _audioSource
    return:
      type: Global.AudioSource
    content.vb: Protected _audioSource As AudioSource
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._enemyMovementModule
  commentId: F:Global.AbstractEnemy._enemyMovementModule
  id: _enemyMovementModule
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _enemyMovementModule
  nameWithType: AbstractEnemy._enemyMovementModule
  fullName: AbstractEnemy._enemyMovementModule
  type: Field
  source:
    id: _enemyMovementModule
    path: ''
    startLine: 61
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AbstractMovementModule _enemyMovementModule
    return:
      type: Global.AbstractMovementModule
    content.vb: Protected _enemyMovementModule As AbstractMovementModule
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._abstractHealthModule
  commentId: F:Global.AbstractEnemy._abstractHealthModule
  id: _abstractHealthModule
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _abstractHealthModule
  nameWithType: AbstractEnemy._abstractHealthModule
  fullName: AbstractEnemy._abstractHealthModule
  type: Field
  source:
    id: _abstractHealthModule
    path: ''
    startLine: 62
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected AbstractHealthModule _abstractHealthModule
    return:
      type: Global.AbstractHealthModule
    content.vb: Protected _abstractHealthModule As AbstractHealthModule
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy._damageTextService
  commentId: F:Global.AbstractEnemy._damageTextService
  id: _damageTextService
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: _damageTextService
  nameWithType: AbstractEnemy._damageTextService
  fullName: AbstractEnemy._damageTextService
  type: Field
  source:
    id: _damageTextService
    path: ''
    startLine: 64
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected DamageTextService _damageTextService
    return:
      type: Global.DamageTextService
    content.vb: Protected _damageTextService As DamageTextService
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Global.AbstractEnemy.Initialize(AudioSource,DamageTextService,IObjectPooler)
  commentId: M:Global.AbstractEnemy.Initialize(AudioSource,DamageTextService,IObjectPooler)
  id: Initialize(AudioSource,DamageTextService,IObjectPooler)
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: Initialize(AudioSource, DamageTextService, IObjectPooler)
  nameWithType: AbstractEnemy.Initialize(AudioSource, DamageTextService, IObjectPooler)
  fullName: AbstractEnemy.Initialize(AudioSource, DamageTextService, IObjectPooler)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 66
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public virtual void Initialize(AudioSource audioSource, DamageTextService damageTextService, IObjectPooler objectPooler)
    parameters:
    - id: audioSource
      type: Global.AudioSource
    - id: damageTextService
      type: Global.DamageTextService
    - id: objectPooler
      type: Global.IObjectPooler
    content.vb: Public Overridable Sub Initialize(audioSource As AudioSource, damageTextService As DamageTextService, objectPooler As IObjectPooler)
  overload: Global.AbstractEnemy.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Global.AbstractEnemy.Heal(System.Int32)
  commentId: M:Global.AbstractEnemy.Heal(System.Int32)
  id: Heal(System.Int32)
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: Heal(Int32)
  nameWithType: AbstractEnemy.Heal(Int32)
  fullName: AbstractEnemy.Heal(System.Int32)
  type: Method
  source:
    id: Heal
    path: ''
    startLine: 75
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public abstract void Heal(int points)
    parameters:
    - id: points
      type: System.Int32
    content.vb: Public MustOverride Sub Heal(points As Integer)
  overload: Global.AbstractEnemy.Heal*
  implements:
  - Global.IHitpointOwner.Heal(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Global.AbstractEnemy.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  commentId: M:Global.AbstractEnemy.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  id: RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: RecieveDamage(Int32, AbstractTower)
  nameWithType: AbstractEnemy.RecieveDamage(Int32, AbstractTower)
  fullName: AbstractEnemy.RecieveDamage(System.Int32, Core.Towers.AbstractTower)
  type: Method
  source:
    id: RecieveDamage
    path: ''
    startLine: 77
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public virtual void RecieveDamage(int damage, AbstractTower abstractTower)
    parameters:
    - id: damage
      type: System.Int32
    - id: abstractTower
      type: Core.Towers.AbstractTower
    content.vb: Public Overridable Sub RecieveDamage(damage As Integer, abstractTower As AbstractTower)
  overload: Global.AbstractEnemy.RecieveDamage*
  implements:
  - Global.IHitpointOwner.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Global.AbstractEnemy.MovementModule
  commentId: M:Global.AbstractEnemy.MovementModule
  id: MovementModule
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: MovementModule()
  nameWithType: AbstractEnemy.MovementModule()
  fullName: AbstractEnemy.MovementModule()
  type: Method
  source:
    id: MovementModule
    path: ''
    startLine: 93
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public virtual AbstractMovementModule MovementModule()
    return:
      type: Global.AbstractMovementModule
    content.vb: Public Overridable Function MovementModule As AbstractMovementModule
  overload: Global.AbstractEnemy.MovementModule*
  implements:
  - Global.IMowementModuleOwner.MovementModule
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Global.AbstractEnemy.ReInitialize(Vector3)
  commentId: M:Global.AbstractEnemy.ReInitialize(Vector3)
  id: ReInitialize(Vector3)
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: ReInitialize(Vector3)
  nameWithType: AbstractEnemy.ReInitialize(Vector3)
  fullName: AbstractEnemy.ReInitialize(Vector3)
  type: Method
  source:
    id: ReInitialize
    path: ''
    startLine: 100
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public virtual void ReInitialize(Vector3 position)
    parameters:
    - id: position
      type: Global.Vector3
    content.vb: Public Overridable Sub ReInitialize(position As Vector3)
  overload: Global.AbstractEnemy.ReInitialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Global.AbstractEnemy.PlayDeathSound
  commentId: M:Global.AbstractEnemy.PlayDeathSound
  id: PlayDeathSound
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: PlayDeathSound()
  nameWithType: AbstractEnemy.PlayDeathSound()
  fullName: AbstractEnemy.PlayDeathSound()
  type: Method
  source:
    id: PlayDeathSound
    path: ''
    startLine: 106
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected virtual void PlayDeathSound()
    content.vb: Protected Overridable Sub PlayDeathSound
  overload: Global.AbstractEnemy.PlayDeathSound*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Global.AbstractEnemy.Die
  commentId: M:Global.AbstractEnemy.Die
  id: Die
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: Die()
  nameWithType: AbstractEnemy.Die()
  fullName: AbstractEnemy.Die()
  type: Method
  source:
    id: Die
    path: ''
    startLine: 107
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected virtual void Die()
    content.vb: Protected Overridable Sub Die
  overload: Global.AbstractEnemy.Die*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Global.AbstractEnemy.IPoolableObject#ReturnToPool
  commentId: M:Global.AbstractEnemy.IPoolableObject#ReturnToPool
  id: IPoolableObject#ReturnToPool
  isEii: true
  parent: Global.AbstractEnemy
  langs:
  - csharp
  - vb
  name: IPoolableObject.ReturnToPool()
  nameWithType: AbstractEnemy.IPoolableObject.ReturnToPool()
  fullName: AbstractEnemy.IPoolableObject.ReturnToPool()
  type: Method
  source:
    id: IPoolableObject.ReturnToPool
    path: ''
    startLine: 127
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: void IPoolableObject.ReturnToPool()
    content.vb: Sub IPoolableObject.ReturnToPool Implements IPoolableObject.ReturnToPool
  overload: Global.AbstractEnemy.IPoolableObject#ReturnToPool*
  implements:
  - Global.IPoolableObject.ReturnToPool
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.IHitpointOwner
  commentId: T:Global.IHitpointOwner
  name: IHitpointOwner
  nameWithType: IHitpointOwner
  fullName: IHitpointOwner
- uid: Global.IMowementModuleOwner
  commentId: T:Global.IMowementModuleOwner
  name: IMowementModuleOwner
  nameWithType: IMowementModuleOwner
  fullName: IMowementModuleOwner
- uid: Global.IPoolableObject
  commentId: T:Global.IPoolableObject
  name: IPoolableObject
  nameWithType: IPoolableObject
  fullName: IPoolableObject
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.AbstractEnemy.Stats*
  commentId: Overload:Global.AbstractEnemy.Stats
  name: Stats
  nameWithType: AbstractEnemy.Stats
  fullName: AbstractEnemy.Stats
- uid: Global.EnemyStats
  commentId: T:Global.EnemyStats
  name: EnemyStats
  nameWithType: EnemyStats
  fullName: EnemyStats
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Global.IObjectPooler
  commentId: T:Global.IObjectPooler
  name: IObjectPooler
  nameWithType: IObjectPooler
  fullName: IObjectPooler
- uid: Global.AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: AudioClip
- uid: Global.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: AudioSource
- uid: Global.AbstractMovementModule
  isExternal: true
  name: AbstractMovementModule
  nameWithType: AbstractMovementModule
  fullName: AbstractMovementModule
- uid: Global.AbstractHealthModule
  commentId: T:Global.AbstractHealthModule
  name: AbstractHealthModule
  nameWithType: AbstractHealthModule
  fullName: AbstractHealthModule
- uid: Global.DamageTextService
  isExternal: true
  name: DamageTextService
  nameWithType: DamageTextService
  fullName: DamageTextService
- uid: Global.AbstractEnemy.Initialize*
  commentId: Overload:Global.AbstractEnemy.Initialize
  name: Initialize
  nameWithType: AbstractEnemy.Initialize
  fullName: AbstractEnemy.Initialize
- uid: Global.AbstractEnemy.Heal*
  commentId: Overload:Global.AbstractEnemy.Heal
  name: Heal
  nameWithType: AbstractEnemy.Heal
  fullName: AbstractEnemy.Heal
- uid: Global.IHitpointOwner.Heal(System.Int32)
  commentId: M:Global.IHitpointOwner.Heal(System.Int32)
  parent: Global.IHitpointOwner
  isExternal: true
  name: Heal(Int32)
  nameWithType: IHitpointOwner.Heal(Int32)
  fullName: IHitpointOwner.Heal(System.Int32)
  spec.csharp:
  - uid: Global.IHitpointOwner.Heal(System.Int32)
    name: Heal
    nameWithType: IHitpointOwner.Heal
    fullName: IHitpointOwner.Heal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IHitpointOwner.Heal(System.Int32)
    name: Heal
    nameWithType: IHitpointOwner.Heal
    fullName: IHitpointOwner.Heal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractEnemy.RecieveDamage*
  commentId: Overload:Global.AbstractEnemy.RecieveDamage
  name: RecieveDamage
  nameWithType: AbstractEnemy.RecieveDamage
  fullName: AbstractEnemy.RecieveDamage
- uid: Global.IHitpointOwner.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  commentId: M:Global.IHitpointOwner.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
  parent: Global.IHitpointOwner
  isExternal: true
  name: RecieveDamage(Int32, AbstractTower)
  nameWithType: IHitpointOwner.RecieveDamage(Int32, AbstractTower)
  fullName: IHitpointOwner.RecieveDamage(System.Int32, Core.Towers.AbstractTower)
  spec.csharp:
  - uid: Global.IHitpointOwner.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
    name: RecieveDamage
    nameWithType: IHitpointOwner.RecieveDamage
    fullName: IHitpointOwner.RecieveDamage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Core.Towers.AbstractTower
    name: AbstractTower
    nameWithType: AbstractTower
    fullName: Core.Towers.AbstractTower
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IHitpointOwner.RecieveDamage(System.Int32,Core.Towers.AbstractTower)
    name: RecieveDamage
    nameWithType: IHitpointOwner.RecieveDamage
    fullName: IHitpointOwner.RecieveDamage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Core.Towers.AbstractTower
    name: AbstractTower
    nameWithType: AbstractTower
    fullName: Core.Towers.AbstractTower
  - name: )
    nameWithType: )
    fullName: )
- uid: Core.Towers.AbstractTower
  commentId: T:Core.Towers.AbstractTower
  parent: Core.Towers
  name: AbstractTower
  nameWithType: AbstractTower
  fullName: Core.Towers.AbstractTower
- uid: Core.Towers
  commentId: N:Core.Towers
  name: Core.Towers
  nameWithType: Core.Towers
  fullName: Core.Towers
- uid: Global.AbstractEnemy.MovementModule*
  commentId: Overload:Global.AbstractEnemy.MovementModule
  name: MovementModule
  nameWithType: AbstractEnemy.MovementModule
  fullName: AbstractEnemy.MovementModule
- uid: Global.IMowementModuleOwner.MovementModule
  commentId: M:Global.IMowementModuleOwner.MovementModule
  parent: Global.IMowementModuleOwner
  name: MovementModule()
  nameWithType: IMowementModuleOwner.MovementModule()
  fullName: IMowementModuleOwner.MovementModule()
  spec.csharp:
  - uid: Global.IMowementModuleOwner.MovementModule
    name: MovementModule
    nameWithType: IMowementModuleOwner.MovementModule
    fullName: IMowementModuleOwner.MovementModule
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IMowementModuleOwner.MovementModule
    name: MovementModule
    nameWithType: IMowementModuleOwner.MovementModule
    fullName: IMowementModuleOwner.MovementModule
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.AbstractEnemy.ReInitialize*
  commentId: Overload:Global.AbstractEnemy.ReInitialize
  name: ReInitialize
  nameWithType: AbstractEnemy.ReInitialize
  fullName: AbstractEnemy.ReInitialize
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Global.AbstractEnemy.PlayDeathSound*
  commentId: Overload:Global.AbstractEnemy.PlayDeathSound
  name: PlayDeathSound
  nameWithType: AbstractEnemy.PlayDeathSound
  fullName: AbstractEnemy.PlayDeathSound
- uid: Global.AbstractEnemy.Die*
  commentId: Overload:Global.AbstractEnemy.Die
  name: Die
  nameWithType: AbstractEnemy.Die
  fullName: AbstractEnemy.Die
- uid: Global.AbstractEnemy.IPoolableObject#ReturnToPool*
  commentId: Overload:Global.AbstractEnemy.IPoolableObject#ReturnToPool
  name: IPoolableObject.ReturnToPool
  nameWithType: AbstractEnemy.IPoolableObject.ReturnToPool
  fullName: AbstractEnemy.IPoolableObject.ReturnToPool
- uid: Global.IPoolableObject.ReturnToPool
  commentId: M:Global.IPoolableObject.ReturnToPool
  parent: Global.IPoolableObject
  name: ReturnToPool()
  nameWithType: IPoolableObject.ReturnToPool()
  fullName: IPoolableObject.ReturnToPool()
  spec.csharp:
  - uid: Global.IPoolableObject.ReturnToPool
    name: ReturnToPool
    nameWithType: IPoolableObject.ReturnToPool
    fullName: IPoolableObject.ReturnToPool
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.IPoolableObject.ReturnToPool
    name: ReturnToPool
    nameWithType: IPoolableObject.ReturnToPool
    fullName: IPoolableObject.ReturnToPool
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
